Terminals unused in grammar

   SET
   IDPARAM
   BIDON
   THROW
   ARROW
   CURVE
   SOLVE


State 273 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: input ENDOFFILE

    2 input: instructions

    3 instructions: instruction
    4             | instructions instruction

    5 list_of_id_args: /* empty */
    6                | id
    7                | id '=' no_comma_expr
    8                | FESPACE id
    9                | FESPACE '&' id
   10                | FESPACE3 id
   11                | FESPACE3 '&' id
   12                | type_of_dcl id
   13                | type_of_dcl '&' id
   14                | '[' list_of_id_args ']'
   15                | list_of_id_args ',' id
   16                | list_of_id_args ',' '[' list_of_id_args ']'
   17                | list_of_id_args ',' id '=' no_comma_expr
   18                | list_of_id_args ',' FESPACE id
   19                | list_of_id_args ',' FESPACE '&' id
   20                | list_of_id_args ',' FESPACE3 id
   21                | list_of_id_args ',' FESPACE3 '&' id
   22                | list_of_id_args ',' type_of_dcl id
   23                | list_of_id_args ',' type_of_dcl '&' id

   24 list_of_id1: id
   25            | list_of_id1 ',' id

   26 id: ID
   27   | FESPACE
   28   | FESPACE3
   29   | FESPACE1

   30 list_of_dcls: ID
   31             | ID '=' no_comma_expr
   32             | ID '(' parameters_list ')'
   33             | list_of_dcls ',' list_of_dcls

   34 parameters_list: no_set_expr
   35                | FESPACE ID
   36                | FESPACE1 ID
   37                | FESPACE3 ID
   38                | ID '=' no_set_expr
   39                | parameters_list ',' no_set_expr
   40                | parameters_list ',' id '=' no_set_expr

   41 type_of_dcl: TYPE
   42            | TYPE '[' TYPE ']'
   43            | TYPE '[' TYPE ',' TYPE ']'
   44            | TYPE '<' TYPE '>'
   45            | TYPE '<' TYPE '>' '[' TYPE ']'
   46            | TYPE '<' TYPE '>' '[' TYPE ',' TYPE ']'

   47 ID_space: ID
   48         | ID '[' no_set_expr ']'
   49         | ID '=' no_set_expr
   50         | '[' list_of_id1 ']'
   51         | '[' list_of_id1 ']' '[' no_set_expr ']'
   52         | '[' list_of_id1 ']' '=' no_set_expr

   53 ID_array_space: ID '(' no_set_expr ')'
   54               | '[' list_of_id1 ']' '(' no_set_expr ')'

   55 fespace123: FESPACE
   56           | FESPACE1
   57           | FESPACE3

   58 fespace: fespace123
   59        | fespace123 '<' TYPE '>'

   60 spaceIDa: ID_array_space
   61         | spaceIDa ',' ID_array_space

   62 spaceIDb: ID_space
   63         | spaceIDb ',' ID_space

   64 spaceIDs: fespace spaceIDb
   65         | fespace '[' TYPE ']' spaceIDa

   66 fespace_def: ID '(' parameters_list ')'

   67 fespace_def_list: fespace_def
   68                 | fespace_def_list ',' fespace_def

   69 $@1: /* empty */

   70 declaration: type_of_dcl $@1 list_of_dcls ';'
   71            | FESPACEID fespace_def_list ';'
   72            | spaceIDs ';'
   73            | FUNCTION ID '=' Expr ';'

   74 $@2: /* empty */

   75 declaration: FUNCTION type_of_dcl ID '(' list_of_id_args ')' $@2 '{' instructions '}'

   76 $@3: /* empty */

   77 declaration: FUNCTION ID '(' list_of_id_args ')' $@3 '=' no_comma_expr ';'

   78 begin: '{'

   79 end: '}'

   80 for_loop: FOR

   81 while_loop: WHILE

   82 $@4: /* empty */

   83 declaration_for: type_of_dcl $@4 list_of_dcls

   84 try: TRY

   85 instruction: ';'
   86            | INCLUDE STRING
   87            | LOAD STRING
   88            | try '{' instructions '}' catchs
   89            | Expr ';'
   90            | declaration
   91            | for_loop '(' Expr ';' Expr ';' Expr ')' instruction
   92            | for_loop '(' declaration_for ';' Expr ';' Expr ')' instruction
   93            | while_loop '(' Expr ')' instruction
   94            | IF '(' Expr ')' instruction
   95            | IF '(' Expr ')' instruction ELSE instruction
   96            | begin instructions end
   97            | BORDER ID border_expr
   98            | BORDER ID '[' array ']' ';'
   99            | BREAK ';'
  100            | CONTINUE ';'
  101            | RETURN Expr ';'

  102 catchs: CATCH '(' '.' '.' '.' ')' instruction

  103 bornes: '(' ID '=' Expr ',' Expr ')'

  104 border_expr: bornes instruction

  105 Expr: no_comma_expr
  106     | Expr ',' Expr

  107 unop: '-'
  108     | '+'
  109     | '!'
  110     | PLUSPLUS
  111     | MOINSMOINS

  112 no_comma_expr: no_set_expr
  113              | no_set_expr '=' no_comma_expr
  114              | no_set_expr PLUSEQ no_comma_expr
  115              | no_set_expr MOINSEQ no_comma_expr
  116              | no_set_expr MULEQ no_comma_expr
  117              | no_set_expr DIVEQ no_comma_expr
  118              | no_set_expr DOTMULEQ no_comma_expr
  119              | no_set_expr DOTDIVEQ no_comma_expr

  120 no_set_expr: no_ternary_expr
  121            | no_ternary_expr '?' no_ternary_expr ':' no_ternary_expr
  122            | no_ternary_expr ':' no_ternary_expr
  123            | no_ternary_expr ':' no_ternary_expr ':' no_ternary_expr

  124 no_ternary_expr: unary_expr
  125                | no_ternary_expr '*' no_ternary_expr
  126                | no_ternary_expr DOTSTAR no_ternary_expr
  127                | no_ternary_expr DOTSLASH no_ternary_expr
  128                | no_ternary_expr '/' no_ternary_expr
  129                | no_ternary_expr '%' no_ternary_expr
  130                | no_ternary_expr '+' no_ternary_expr
  131                | no_ternary_expr '-' no_ternary_expr
  132                | no_ternary_expr LTLT no_ternary_expr
  133                | no_ternary_expr GTGT no_ternary_expr
  134                | no_ternary_expr '&' no_ternary_expr
  135                | no_ternary_expr AND no_ternary_expr
  136                | no_ternary_expr '|' no_ternary_expr
  137                | no_ternary_expr OR no_ternary_expr
  138                | no_ternary_expr '<' no_ternary_expr
  139                | no_ternary_expr LE no_ternary_expr
  140                | no_ternary_expr '>' no_ternary_expr
  141                | no_ternary_expr GE no_ternary_expr
  142                | no_ternary_expr EQ no_ternary_expr
  143                | no_ternary_expr NE no_ternary_expr

  144 sub_script_expr: no_ternary_expr
  145                | ':'
  146                | no_ternary_expr ':' no_ternary_expr
  147                | no_ternary_expr ':' no_ternary_expr ':' no_ternary_expr

  148 parameters: /* empty */
  149           | FESPACE
  150           | FESPACE1
  151           | FESPACE3
  152           | id '=' no_set_expr
  153           | sub_script_expr
  154           | parameters ',' FESPACE
  155           | parameters ',' FESPACE1
  156           | parameters ',' FESPACE3
  157           | parameters ',' sub_script_expr
  158           | parameters ',' id '=' no_set_expr

  159 array: no_comma_expr
  160      | array ',' no_comma_expr

  161 unary_expr: pow_expr
  162           | unop pow_expr

  163 pow_expr: primary
  164         | primary '^' unary_expr
  165         | primary '_' unary_expr
  166         | primary '\''

  167 primary: ID
  168        | LNUM
  169        | DNUM
  170        | CNUM
  171        | STRING
  172        | primary '(' parameters ')'
  173        | primary '[' sub_script_expr ']'
  174        | primary '[' sub_script_expr ',' sub_script_expr ']'
  175        | primary '[' ']'
  176        | primary '.' ID
  177        | FESPACE '.' ID
  178        | FESPACE '(' parameters ')'
  179        | FESPACE1 '.' ID
  180        | FESPACE1 '(' parameters ')'
  181        | FESPACE3 '.' ID
  182        | FESPACE3 '(' parameters ')'
  183        | primary PLUSPLUS
  184        | primary MOINSMOINS
  185        | TYPE '(' Expr ')'
  186        | '(' Expr ')'
  187        | '[' array ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 109
'%' (37) 129
'&' (38) 9 11 13 19 21 23 134
'\'' (39) 166
'(' (40) 32 53 54 66 75 77 91 92 93 94 95 102 103 172 178 180 182 185
    186
')' (41) 32 53 54 66 75 77 91 92 93 94 95 102 103 172 178 180 182 185
    186
'*' (42) 125
'+' (43) 108 130
',' (44) 15 16 17 18 19 20 21 22 23 25 33 39 40 43 46 61 63 68 103
    106 154 155 156 157 158 160 174
'-' (45) 107 131
'.' (46) 102 176 177 179 181
'/' (47) 128
':' (58) 121 122 123 145 146 147
';' (59) 70 71 72 73 77 85 89 91 92 98 99 100 101
'<' (60) 44 45 46 59 138
'=' (61) 7 17 31 38 40 49 52 73 77 103 113 152 158
'>' (62) 44 45 46 59 140
'?' (63) 121
'[' (91) 14 16 42 43 45 46 48 50 51 52 54 65 98 173 174 175 187
']' (93) 14 16 42 43 45 46 48 50 51 52 54 65 98 173 174 175 187
'^' (94) 164
'_' (95) 165
'{' (123) 75 78 88
'|' (124) 136
'}' (125) 75 79 88
error (256)
IF (258) 94 95
ELSE (259) 95
SET (260)
GTGT (261) 133
LTLT (262) 132
OR (263) 137
AND (264) 135
NE (265) 143
EQ (266) 142
GE (267) 141
LE (268) 139
DOTSLASH (269) 127
DOTSTAR (270) 126
MOINSMOINS (271) 111 184
PLUSPLUS (272) 110 183
UNARY (273)
LNUM (274) 168
DNUM (275) 169
CNUM (276) 170
ID (277) 26 30 31 32 35 36 37 38 47 48 49 53 66 73 75 77 97 98 103
    167 176 177 179 181
FESPACEID (278) 71
IDPARAM (279)
STRING (280) 86 87 171
ENDOFFILE (281) 1
INCLUDE (282) 86
LOAD (283) 87
BIDON (284)
FOR (285) 80
WHILE (286) 81
BREAK (287) 99
CONTINUE (288) 100
RETURN (289) 101
TRY (290) 84
CATCH (291) 102
THROW (292)
TYPE (293) 41 42 43 44 45 46 59 65 185
FUNCTION (294) 73 75 77
FESPACE (295) 8 9 18 19 27 35 55 149 154 177 178
FESPACE1 (296) 29 36 56 150 155 179 180
FESPACE3 (297) 10 11 20 21 28 37 57 151 156 181 182
PLUSEQ (298) 114
MOINSEQ (299) 115
MULEQ (300) 116
DIVEQ (301) 117
DOTMULEQ (302) 118
DOTDIVEQ (303) 119
ARROW (304)
BORDER (305) 97 98
CURVE (306)
SOLVE (307)


Nonterminals, with rules where they appear

$accept (78)
    on left: 0
start (79)
    on left: 1, on right: 0
input (80)
    on left: 2, on right: 1
instructions (81)
    on left: 3 4, on right: 2 4 75 88 96
list_of_id_args (82)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23, on right:
    14 15 16 17 18 19 20 21 22 23 75 77
list_of_id1 (83)
    on left: 24 25, on right: 25 50 51 52 54
id (84)
    on left: 26 27 28 29, on right: 6 7 8 9 10 11 12 13 15 17 18 19
    20 21 22 23 24 25 40 152 158
list_of_dcls (85)
    on left: 30 31 32 33, on right: 33 70 83
parameters_list (86)
    on left: 34 35 36 37 38 39 40, on right: 32 39 40 66
type_of_dcl (87)
    on left: 41 42 43 44 45 46, on right: 12 13 22 23 70 75 83
ID_space (88)
    on left: 47 48 49 50 51 52, on right: 62 63
ID_array_space (89)
    on left: 53 54, on right: 60 61
fespace123 (90)
    on left: 55 56 57, on right: 58 59
fespace (91)
    on left: 58 59, on right: 64 65
spaceIDa (92)
    on left: 60 61, on right: 61 65
spaceIDb (93)
    on left: 62 63, on right: 63 64
spaceIDs (94)
    on left: 64 65, on right: 72
fespace_def (95)
    on left: 66, on right: 67 68
fespace_def_list (96)
    on left: 67 68, on right: 68 71
declaration (97)
    on left: 70 71 72 73 75 77, on right: 90
$@1 (98)
    on left: 69, on right: 70
$@2 (99)
    on left: 74, on right: 75
$@3 (100)
    on left: 76, on right: 77
begin (101)
    on left: 78, on right: 96
end (102)
    on left: 79, on right: 96
for_loop (103)
    on left: 80, on right: 91 92
while_loop (104)
    on left: 81, on right: 93
declaration_for (105)
    on left: 83, on right: 92
$@4 (106)
    on left: 82, on right: 83
try (107)
    on left: 84, on right: 88
instruction (108)
    on left: 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101,
    on right: 3 4 91 92 93 94 95 102 104
catchs (109)
    on left: 102, on right: 88
bornes (110)
    on left: 103, on right: 104
border_expr (111)
    on left: 104, on right: 97
Expr (112)
    on left: 105 106, on right: 73 89 91 92 93 94 95 101 103 106 185
    186
unop (113)
    on left: 107 108 109 110 111, on right: 162
no_comma_expr (114)
    on left: 112 113 114 115 116 117 118 119, on right: 7 17 31 77
    105 113 114 115 116 117 118 119 159 160
no_set_expr (115)
    on left: 120 121 122 123, on right: 34 38 39 40 48 49 51 52 53
    54 112 113 114 115 116 117 118 119 152 158
no_ternary_expr (116)
    on left: 124 125 126 127 128 129 130 131 132 133 134 135 136 137
    138 139 140 141 142 143, on right: 120 121 122 123 125 126 127
    128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143
    144 146 147
sub_script_expr (117)
    on left: 144 145 146 147, on right: 153 157 173 174
parameters (118)
    on left: 148 149 150 151 152 153 154 155 156 157 158, on right:
    154 155 156 157 158 172 178 180 182
array (119)
    on left: 159 160, on right: 98 160 187
unary_expr (120)
    on left: 161 162, on right: 124 164 165
pow_expr (121)
    on left: 163 164 165 166, on right: 161 162
primary (122)
    on left: 167 168 169 170 171 172 173 174 175 176 177 178 179 180
    181 182 183 184 185 186 187, on right: 163 164 165 166 172 173
    174 175 176 183 184


state 0

    0 $accept: . start $end

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    start            go to state 31
    input            go to state 32
    instructions     go to state 33
    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 43
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 1

   94 instruction: IF . '(' Expr ')' instruction
   95            | IF . '(' Expr ')' instruction ELSE instruction

    '('  shift, and go to state 52


state 2

  108 unop: '+' .

    $default  reduce using rule 108 (unop)


state 3

  107 unop: '-' .

    $default  reduce using rule 107 (unop)


state 4

  109 unop: '!' .

    $default  reduce using rule 109 (unop)


state 5

  111 unop: MOINSMOINS .

    $default  reduce using rule 111 (unop)


state 6

  110 unop: PLUSPLUS .

    $default  reduce using rule 110 (unop)


state 7

  186 primary: '(' . Expr ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 57
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 8

  187 primary: '[' . array ']'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 58
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    array            go to state 59
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 9

  168 primary: LNUM .

    $default  reduce using rule 168 (primary)


state 10

  169 primary: DNUM .

    $default  reduce using rule 169 (primary)


state 11

  170 primary: CNUM .

    $default  reduce using rule 170 (primary)


state 12

  167 primary: ID .

    $default  reduce using rule 167 (primary)


state 13

   71 declaration: FESPACEID . fespace_def_list ';'

    ID  shift, and go to state 60

    fespace_def       go to state 61
    fespace_def_list  go to state 62


state 14

  171 primary: STRING .

    $default  reduce using rule 171 (primary)


state 15

   86 instruction: INCLUDE . STRING

    STRING  shift, and go to state 63


state 16

   87 instruction: LOAD . STRING

    STRING  shift, and go to state 64


state 17

   80 for_loop: FOR .

    $default  reduce using rule 80 (for_loop)


state 18

   81 while_loop: WHILE .

    $default  reduce using rule 81 (while_loop)


state 19

   99 instruction: BREAK . ';'

    ';'  shift, and go to state 65


state 20

  100 instruction: CONTINUE . ';'

    ';'  shift, and go to state 66


state 21

  101 instruction: RETURN . Expr ';'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 67
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 22

   84 try: TRY .

    $default  reduce using rule 84 (try)


state 23

   41 type_of_dcl: TYPE .
   42            | TYPE . '[' TYPE ']'
   43            | TYPE . '[' TYPE ',' TYPE ']'
   44            | TYPE . '<' TYPE '>'
   45            | TYPE . '<' TYPE '>' '[' TYPE ']'
   46            | TYPE . '<' TYPE '>' '[' TYPE ',' TYPE ']'
  185 primary: TYPE . '(' Expr ')'

    '<'  shift, and go to state 68
    '('  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 41 (type_of_dcl)


state 24

   73 declaration: FUNCTION . ID '=' Expr ';'
   75            | FUNCTION . type_of_dcl ID '(' list_of_id_args ')' $@2 '{' instructions '}'
   77            | FUNCTION . ID '(' list_of_id_args ')' $@3 '=' no_comma_expr ';'

    ID    shift, and go to state 71
    TYPE  shift, and go to state 72

    type_of_dcl  go to state 73


state 25

   55 fespace123: FESPACE .
  177 primary: FESPACE . '.' ID
  178        | FESPACE . '(' parameters ')'

    '('  shift, and go to state 74
    '.'  shift, and go to state 75

    $default  reduce using rule 55 (fespace123)


state 26

   56 fespace123: FESPACE1 .
  179 primary: FESPACE1 . '.' ID
  180        | FESPACE1 . '(' parameters ')'

    '('  shift, and go to state 76
    '.'  shift, and go to state 77

    $default  reduce using rule 56 (fespace123)


state 27

   57 fespace123: FESPACE3 .
  181 primary: FESPACE3 . '.' ID
  182        | FESPACE3 . '(' parameters ')'

    '('  shift, and go to state 78
    '.'  shift, and go to state 79

    $default  reduce using rule 57 (fespace123)


state 28

   97 instruction: BORDER . ID border_expr
   98            | BORDER . ID '[' array ']' ';'

    ID  shift, and go to state 80


state 29

   85 instruction: ';' .

    $default  reduce using rule 85 (instruction)


state 30

   78 begin: '{' .

    $default  reduce using rule 78 (begin)


state 31

    0 $accept: start . $end

    $end  shift, and go to state 81


state 32

    1 start: input . ENDOFFILE

    ENDOFFILE  shift, and go to state 82


state 33

    2 input: instructions .
    4 instructions: instructions . instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    $default  reduce using rule 2 (input)

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 83
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 34

   70 declaration: type_of_dcl . $@1 list_of_dcls ';'

    $default  reduce using rule 69 ($@1)

    $@1  go to state 84


state 35

   58 fespace: fespace123 .
   59        | fespace123 . '<' TYPE '>'

    '<'  shift, and go to state 85

    $default  reduce using rule 58 (fespace)


state 36

   64 spaceIDs: fespace . spaceIDb
   65         | fespace . '[' TYPE ']' spaceIDa

    '['  shift, and go to state 86
    ID   shift, and go to state 87

    ID_space  go to state 88
    spaceIDb  go to state 89


state 37

   72 declaration: spaceIDs . ';'

    ';'  shift, and go to state 90


state 38

   90 instruction: declaration .

    $default  reduce using rule 90 (instruction)


state 39

   96 instruction: begin . instructions end

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    instructions     go to state 91
    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 43
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 40

   91 instruction: for_loop . '(' Expr ';' Expr ';' Expr ')' instruction
   92            | for_loop . '(' declaration_for ';' Expr ';' Expr ')' instruction

    '('  shift, and go to state 92


state 41

   93 instruction: while_loop . '(' Expr ')' instruction

    '('  shift, and go to state 93


state 42

   88 instruction: try . '{' instructions '}' catchs

    '{'  shift, and go to state 94


state 43

    3 instructions: instruction .

    $default  reduce using rule 3 (instructions)


state 44

   89 instruction: Expr . ';'
  106 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ';'  shift, and go to state 96


state 45

  162 unary_expr: unop . pow_expr

    '('       shift, and go to state 7
    '['       shift, and go to state 8
    LNUM      shift, and go to state 9
    DNUM      shift, and go to state 10
    CNUM      shift, and go to state 11
    ID        shift, and go to state 12
    STRING    shift, and go to state 14
    TYPE      shift, and go to state 53
    FESPACE   shift, and go to state 54
    FESPACE1  shift, and go to state 55
    FESPACE3  shift, and go to state 56

    pow_expr  go to state 97
    primary   go to state 51


state 46

  105 Expr: no_comma_expr .

    $default  reduce using rule 105 (Expr)


state 47

  112 no_comma_expr: no_set_expr .
  113              | no_set_expr . '=' no_comma_expr
  114              | no_set_expr . PLUSEQ no_comma_expr
  115              | no_set_expr . MOINSEQ no_comma_expr
  116              | no_set_expr . MULEQ no_comma_expr
  117              | no_set_expr . DIVEQ no_comma_expr
  118              | no_set_expr . DOTMULEQ no_comma_expr
  119              | no_set_expr . DOTDIVEQ no_comma_expr

    '='       shift, and go to state 98
    PLUSEQ    shift, and go to state 99
    MOINSEQ   shift, and go to state 100
    MULEQ     shift, and go to state 101
    DIVEQ     shift, and go to state 102
    DOTMULEQ  shift, and go to state 103
    DOTDIVEQ  shift, and go to state 104

    $default  reduce using rule 112 (no_comma_expr)


state 48

  120 no_set_expr: no_ternary_expr .
  121            | no_ternary_expr . '?' no_ternary_expr ':' no_ternary_expr
  122            | no_ternary_expr . ':' no_ternary_expr
  123            | no_ternary_expr . ':' no_ternary_expr ':' no_ternary_expr
  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123
    '?'       shift, and go to state 124
    ':'       shift, and go to state 125

    $default  reduce using rule 120 (no_set_expr)


state 49

  124 no_ternary_expr: unary_expr .

    $default  reduce using rule 124 (no_ternary_expr)


state 50

  161 unary_expr: pow_expr .

    $default  reduce using rule 161 (unary_expr)


state 51

  163 pow_expr: primary .
  164         | primary . '^' unary_expr
  165         | primary . '_' unary_expr
  166         | primary . '\''
  172 primary: primary . '(' parameters ')'
  173        | primary . '[' sub_script_expr ']'
  174        | primary . '[' sub_script_expr ',' sub_script_expr ']'
  175        | primary . '[' ']'
  176        | primary . '.' ID
  183        | primary . PLUSPLUS
  184        | primary . MOINSMOINS

    MOINSMOINS  shift, and go to state 126
    PLUSPLUS    shift, and go to state 127
    '^'         shift, and go to state 128
    '\''        shift, and go to state 129
    '_'         shift, and go to state 130
    '('         shift, and go to state 131
    '['         shift, and go to state 132
    '.'         shift, and go to state 133

    $default  reduce using rule 163 (pow_expr)


state 52

   94 instruction: IF '(' . Expr ')' instruction
   95            | IF '(' . Expr ')' instruction ELSE instruction

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 134
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 53

  185 primary: TYPE . '(' Expr ')'

    '('  shift, and go to state 69


state 54

  177 primary: FESPACE . '.' ID
  178        | FESPACE . '(' parameters ')'

    '('  shift, and go to state 74
    '.'  shift, and go to state 75


state 55

  179 primary: FESPACE1 . '.' ID
  180        | FESPACE1 . '(' parameters ')'

    '('  shift, and go to state 76
    '.'  shift, and go to state 77


state 56

  181 primary: FESPACE3 . '.' ID
  182        | FESPACE3 . '(' parameters ')'

    '('  shift, and go to state 78
    '.'  shift, and go to state 79


state 57

  106 Expr: Expr . ',' Expr
  186 primary: '(' Expr . ')'

    ','  shift, and go to state 95
    ')'  shift, and go to state 135


state 58

  159 array: no_comma_expr .

    $default  reduce using rule 159 (array)


state 59

  160 array: array . ',' no_comma_expr
  187 primary: '[' array . ']'

    ','  shift, and go to state 136
    ']'  shift, and go to state 137


state 60

   66 fespace_def: ID . '(' parameters_list ')'

    '('  shift, and go to state 138


state 61

   67 fespace_def_list: fespace_def .

    $default  reduce using rule 67 (fespace_def_list)


state 62

   68 fespace_def_list: fespace_def_list . ',' fespace_def
   71 declaration: FESPACEID fespace_def_list . ';'

    ','  shift, and go to state 139
    ';'  shift, and go to state 140


state 63

   86 instruction: INCLUDE STRING .

    $default  reduce using rule 86 (instruction)


state 64

   87 instruction: LOAD STRING .

    $default  reduce using rule 87 (instruction)


state 65

   99 instruction: BREAK ';' .

    $default  reduce using rule 99 (instruction)


state 66

  100 instruction: CONTINUE ';' .

    $default  reduce using rule 100 (instruction)


state 67

  101 instruction: RETURN Expr . ';'
  106 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ';'  shift, and go to state 141


state 68

   44 type_of_dcl: TYPE '<' . TYPE '>'
   45            | TYPE '<' . TYPE '>' '[' TYPE ']'
   46            | TYPE '<' . TYPE '>' '[' TYPE ',' TYPE ']'

    TYPE  shift, and go to state 142


state 69

  185 primary: TYPE '(' . Expr ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 143
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 70

   42 type_of_dcl: TYPE '[' . TYPE ']'
   43            | TYPE '[' . TYPE ',' TYPE ']'

    TYPE  shift, and go to state 144


state 71

   73 declaration: FUNCTION ID . '=' Expr ';'
   77            | FUNCTION ID . '(' list_of_id_args ')' $@3 '=' no_comma_expr ';'

    '='  shift, and go to state 145
    '('  shift, and go to state 146


state 72

   41 type_of_dcl: TYPE .
   42            | TYPE . '[' TYPE ']'
   43            | TYPE . '[' TYPE ',' TYPE ']'
   44            | TYPE . '<' TYPE '>'
   45            | TYPE . '<' TYPE '>' '[' TYPE ']'
   46            | TYPE . '<' TYPE '>' '[' TYPE ',' TYPE ']'

    '<'  shift, and go to state 68
    '['  shift, and go to state 70

    $default  reduce using rule 41 (type_of_dcl)


state 73

   75 declaration: FUNCTION type_of_dcl . ID '(' list_of_id_args ')' $@2 '{' instructions '}'

    ID  shift, and go to state 147


state 74

  178 primary: FESPACE '(' . parameters ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 148
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 149
    FESPACE1    shift, and go to state 150
    FESPACE3    shift, and go to state 151
    ':'         shift, and go to state 152

    $default  reduce using rule 148 (parameters)

    id               go to state 153
    unop             go to state 45
    no_ternary_expr  go to state 154
    sub_script_expr  go to state 155
    parameters       go to state 156
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 75

  177 primary: FESPACE '.' . ID

    ID  shift, and go to state 157


state 76

  180 primary: FESPACE1 '(' . parameters ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 148
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 149
    FESPACE1    shift, and go to state 150
    FESPACE3    shift, and go to state 151
    ':'         shift, and go to state 152

    $default  reduce using rule 148 (parameters)

    id               go to state 153
    unop             go to state 45
    no_ternary_expr  go to state 154
    sub_script_expr  go to state 155
    parameters       go to state 158
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 77

  179 primary: FESPACE1 '.' . ID

    ID  shift, and go to state 159


state 78

  182 primary: FESPACE3 '(' . parameters ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 148
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 149
    FESPACE1    shift, and go to state 150
    FESPACE3    shift, and go to state 151
    ':'         shift, and go to state 152

    $default  reduce using rule 148 (parameters)

    id               go to state 153
    unop             go to state 45
    no_ternary_expr  go to state 154
    sub_script_expr  go to state 155
    parameters       go to state 160
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 79

  181 primary: FESPACE3 '.' . ID

    ID  shift, and go to state 161


state 80

   97 instruction: BORDER ID . border_expr
   98            | BORDER ID . '[' array ']' ';'

    '('  shift, and go to state 162
    '['  shift, and go to state 163

    bornes       go to state 164
    border_expr  go to state 165


state 81

    0 $accept: start $end .

    $default  accept


state 82

    1 start: input ENDOFFILE .

    $default  reduce using rule 1 (start)


state 83

    4 instructions: instructions instruction .

    $default  reduce using rule 4 (instructions)


state 84

   70 declaration: type_of_dcl $@1 . list_of_dcls ';'

    ID  shift, and go to state 166

    list_of_dcls  go to state 167


state 85

   59 fespace: fespace123 '<' . TYPE '>'

    TYPE  shift, and go to state 168


state 86

   50 ID_space: '[' . list_of_id1 ']'
   51         | '[' . list_of_id1 ']' '[' no_set_expr ']'
   52         | '[' . list_of_id1 ']' '=' no_set_expr
   65 spaceIDs: fespace '[' . TYPE ']' spaceIDa

    ID        shift, and go to state 169
    TYPE      shift, and go to state 170
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    list_of_id1  go to state 174
    id           go to state 175


state 87

   47 ID_space: ID .
   48         | ID . '[' no_set_expr ']'
   49         | ID . '=' no_set_expr

    '='  shift, and go to state 176
    '['  shift, and go to state 177

    $default  reduce using rule 47 (ID_space)


state 88

   62 spaceIDb: ID_space .

    $default  reduce using rule 62 (spaceIDb)


state 89

   63 spaceIDb: spaceIDb . ',' ID_space
   64 spaceIDs: fespace spaceIDb .

    ','  shift, and go to state 178

    $default  reduce using rule 64 (spaceIDs)


state 90

   72 declaration: spaceIDs ';' .

    $default  reduce using rule 72 (declaration)


state 91

    4 instructions: instructions . instruction
   96 instruction: begin instructions . end

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30
    '}'         shift, and go to state 179

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    end              go to state 180
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 83
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 92

   91 instruction: for_loop '(' . Expr ';' Expr ';' Expr ')' instruction
   92            | for_loop '(' . declaration_for ';' Expr ';' Expr ')' instruction

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 23
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    type_of_dcl      go to state 181
    declaration_for  go to state 182
    Expr             go to state 183
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 93

   93 instruction: while_loop '(' . Expr ')' instruction

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 184
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 94

   88 instruction: try '{' . instructions '}' catchs

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    instructions     go to state 185
    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 43
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 95

  106 Expr: Expr ',' . Expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 186
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 96

   89 instruction: Expr ';' .

    $default  reduce using rule 89 (instruction)


state 97

  162 unary_expr: unop pow_expr .

    $default  reduce using rule 162 (unary_expr)


state 98

  113 no_comma_expr: no_set_expr '=' . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 187
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 99

  114 no_comma_expr: no_set_expr PLUSEQ . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 188
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 100

  115 no_comma_expr: no_set_expr MOINSEQ . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 189
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 101

  116 no_comma_expr: no_set_expr MULEQ . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 190
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 102

  117 no_comma_expr: no_set_expr DIVEQ . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 191
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 103

  118 no_comma_expr: no_set_expr DOTMULEQ . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 192
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 104

  119 no_comma_expr: no_set_expr DOTDIVEQ . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 193
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 105

  133 no_ternary_expr: no_ternary_expr GTGT . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 194
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 106

  132 no_ternary_expr: no_ternary_expr LTLT . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 195
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 107

  136 no_ternary_expr: no_ternary_expr '|' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 196
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 108

  137 no_ternary_expr: no_ternary_expr OR . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 197
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 109

  134 no_ternary_expr: no_ternary_expr '&' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 198
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 110

  135 no_ternary_expr: no_ternary_expr AND . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 199
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 111

  143 no_ternary_expr: no_ternary_expr NE . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 200
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 112

  142 no_ternary_expr: no_ternary_expr EQ . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 201
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 113

  138 no_ternary_expr: no_ternary_expr '<' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 202
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 114

  140 no_ternary_expr: no_ternary_expr '>' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 203
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 115

  141 no_ternary_expr: no_ternary_expr GE . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 204
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 116

  139 no_ternary_expr: no_ternary_expr LE . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 205
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 117

  130 no_ternary_expr: no_ternary_expr '+' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 206
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 118

  131 no_ternary_expr: no_ternary_expr '-' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 207
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 119

  125 no_ternary_expr: no_ternary_expr '*' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 208
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 120

  128 no_ternary_expr: no_ternary_expr '/' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 209
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 121

  129 no_ternary_expr: no_ternary_expr '%' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 210
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 122

  127 no_ternary_expr: no_ternary_expr DOTSLASH . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 211
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 123

  126 no_ternary_expr: no_ternary_expr DOTSTAR . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 212
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 124

  121 no_set_expr: no_ternary_expr '?' . no_ternary_expr ':' no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 213
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 125

  122 no_set_expr: no_ternary_expr ':' . no_ternary_expr
  123            | no_ternary_expr ':' . no_ternary_expr ':' no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 214
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 126

  184 primary: primary MOINSMOINS .

    $default  reduce using rule 184 (primary)


state 127

  183 primary: primary PLUSPLUS .

    $default  reduce using rule 183 (primary)


state 128

  164 pow_expr: primary '^' . unary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop        go to state 45
    unary_expr  go to state 215
    pow_expr    go to state 50
    primary     go to state 51


state 129

  166 pow_expr: primary '\'' .

    $default  reduce using rule 166 (pow_expr)


state 130

  165 pow_expr: primary '_' . unary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop        go to state 45
    unary_expr  go to state 216
    pow_expr    go to state 50
    primary     go to state 51


state 131

  172 primary: primary '(' . parameters ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 148
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 149
    FESPACE1    shift, and go to state 150
    FESPACE3    shift, and go to state 151
    ':'         shift, and go to state 152

    $default  reduce using rule 148 (parameters)

    id               go to state 153
    unop             go to state 45
    no_ternary_expr  go to state 154
    sub_script_expr  go to state 155
    parameters       go to state 217
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 132

  173 primary: primary '[' . sub_script_expr ']'
  174        | primary '[' . sub_script_expr ',' sub_script_expr ']'
  175        | primary '[' . ']'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    ']'         shift, and go to state 218
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56
    ':'         shift, and go to state 152

    unop             go to state 45
    no_ternary_expr  go to state 154
    sub_script_expr  go to state 219
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 133

  176 primary: primary '.' . ID

    ID  shift, and go to state 220


state 134

   94 instruction: IF '(' Expr . ')' instruction
   95            | IF '(' Expr . ')' instruction ELSE instruction
  106 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ')'  shift, and go to state 221


state 135

  186 primary: '(' Expr ')' .

    $default  reduce using rule 186 (primary)


state 136

  160 array: array ',' . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 222
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 137

  187 primary: '[' array ']' .

    $default  reduce using rule 187 (primary)


state 138

   66 fespace_def: ID '(' . parameters_list ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 223
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 224
    FESPACE1    shift, and go to state 225
    FESPACE3    shift, and go to state 226

    parameters_list  go to state 227
    unop             go to state 45
    no_set_expr      go to state 228
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 139

   68 fespace_def_list: fespace_def_list ',' . fespace_def

    ID  shift, and go to state 60

    fespace_def  go to state 229


state 140

   71 declaration: FESPACEID fespace_def_list ';' .

    $default  reduce using rule 71 (declaration)


state 141

  101 instruction: RETURN Expr ';' .

    $default  reduce using rule 101 (instruction)


state 142

   44 type_of_dcl: TYPE '<' TYPE . '>'
   45            | TYPE '<' TYPE . '>' '[' TYPE ']'
   46            | TYPE '<' TYPE . '>' '[' TYPE ',' TYPE ']'

    '>'  shift, and go to state 230


state 143

  106 Expr: Expr . ',' Expr
  185 primary: TYPE '(' Expr . ')'

    ','  shift, and go to state 95
    ')'  shift, and go to state 231


state 144

   42 type_of_dcl: TYPE '[' TYPE . ']'
   43            | TYPE '[' TYPE . ',' TYPE ']'

    ','  shift, and go to state 232
    ']'  shift, and go to state 233


state 145

   73 declaration: FUNCTION ID '=' . Expr ';'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 234
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 146

   77 declaration: FUNCTION ID '(' . list_of_id_args ')' $@3 '=' no_comma_expr ';'

    '['       shift, and go to state 235
    ID        shift, and go to state 169
    TYPE      shift, and go to state 72
    FESPACE   shift, and go to state 236
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 237

    $default  reduce using rule 5 (list_of_id_args)

    list_of_id_args  go to state 238
    id               go to state 239
    type_of_dcl      go to state 240


state 147

   75 declaration: FUNCTION type_of_dcl ID . '(' list_of_id_args ')' $@2 '{' instructions '}'

    '('  shift, and go to state 241


state 148

   26 id: ID .
  167 primary: ID .

    '='       reduce using rule 26 (id)
    $default  reduce using rule 167 (primary)


state 149

   27 id: FESPACE .
  149 parameters: FESPACE .
  177 primary: FESPACE . '.' ID
  178        | FESPACE . '(' parameters ')'

    '('  shift, and go to state 74
    '.'  shift, and go to state 75

    '='       reduce using rule 27 (id)
    $default  reduce using rule 149 (parameters)


state 150

   29 id: FESPACE1 .
  150 parameters: FESPACE1 .
  179 primary: FESPACE1 . '.' ID
  180        | FESPACE1 . '(' parameters ')'

    '('  shift, and go to state 76
    '.'  shift, and go to state 77

    '='       reduce using rule 29 (id)
    $default  reduce using rule 150 (parameters)


state 151

   28 id: FESPACE3 .
  151 parameters: FESPACE3 .
  181 primary: FESPACE3 . '.' ID
  182        | FESPACE3 . '(' parameters ')'

    '('  shift, and go to state 78
    '.'  shift, and go to state 79

    '='       reduce using rule 28 (id)
    $default  reduce using rule 151 (parameters)


state 152

  145 sub_script_expr: ':' .

    $default  reduce using rule 145 (sub_script_expr)


state 153

  152 parameters: id . '=' no_set_expr

    '='  shift, and go to state 242


state 154

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr
  144 sub_script_expr: no_ternary_expr .
  146                | no_ternary_expr . ':' no_ternary_expr
  147                | no_ternary_expr . ':' no_ternary_expr ':' no_ternary_expr

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123
    ':'       shift, and go to state 243

    $default  reduce using rule 144 (sub_script_expr)


state 155

  153 parameters: sub_script_expr .

    $default  reduce using rule 153 (parameters)


state 156

  154 parameters: parameters . ',' FESPACE
  155           | parameters . ',' FESPACE1
  156           | parameters . ',' FESPACE3
  157           | parameters . ',' sub_script_expr
  158           | parameters . ',' id '=' no_set_expr
  178 primary: FESPACE '(' parameters . ')'

    ','  shift, and go to state 244
    ')'  shift, and go to state 245


state 157

  177 primary: FESPACE '.' ID .

    $default  reduce using rule 177 (primary)


state 158

  154 parameters: parameters . ',' FESPACE
  155           | parameters . ',' FESPACE1
  156           | parameters . ',' FESPACE3
  157           | parameters . ',' sub_script_expr
  158           | parameters . ',' id '=' no_set_expr
  180 primary: FESPACE1 '(' parameters . ')'

    ','  shift, and go to state 244
    ')'  shift, and go to state 246


state 159

  179 primary: FESPACE1 '.' ID .

    $default  reduce using rule 179 (primary)


state 160

  154 parameters: parameters . ',' FESPACE
  155           | parameters . ',' FESPACE1
  156           | parameters . ',' FESPACE3
  157           | parameters . ',' sub_script_expr
  158           | parameters . ',' id '=' no_set_expr
  182 primary: FESPACE3 '(' parameters . ')'

    ','  shift, and go to state 244
    ')'  shift, and go to state 247


state 161

  181 primary: FESPACE3 '.' ID .

    $default  reduce using rule 181 (primary)


state 162

  103 bornes: '(' . ID '=' Expr ',' Expr ')'

    ID  shift, and go to state 248


state 163

   98 instruction: BORDER ID '[' . array ']' ';'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 58
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    array            go to state 249
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 164

  104 border_expr: bornes . instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 250
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 165

   97 instruction: BORDER ID border_expr .

    $default  reduce using rule 97 (instruction)


state 166

   30 list_of_dcls: ID .
   31             | ID . '=' no_comma_expr
   32             | ID . '(' parameters_list ')'

    '='  shift, and go to state 251
    '('  shift, and go to state 252

    $default  reduce using rule 30 (list_of_dcls)


state 167

   33 list_of_dcls: list_of_dcls . ',' list_of_dcls
   70 declaration: type_of_dcl $@1 list_of_dcls . ';'

    ','  shift, and go to state 253
    ';'  shift, and go to state 254


state 168

   59 fespace: fespace123 '<' TYPE . '>'

    '>'  shift, and go to state 255


state 169

   26 id: ID .

    $default  reduce using rule 26 (id)


state 170

   65 spaceIDs: fespace '[' TYPE . ']' spaceIDa

    ']'  shift, and go to state 256


state 171

   27 id: FESPACE .

    $default  reduce using rule 27 (id)


state 172

   29 id: FESPACE1 .

    $default  reduce using rule 29 (id)


state 173

   28 id: FESPACE3 .

    $default  reduce using rule 28 (id)


state 174

   25 list_of_id1: list_of_id1 . ',' id
   50 ID_space: '[' list_of_id1 . ']'
   51         | '[' list_of_id1 . ']' '[' no_set_expr ']'
   52         | '[' list_of_id1 . ']' '=' no_set_expr

    ','  shift, and go to state 257
    ']'  shift, and go to state 258


state 175

   24 list_of_id1: id .

    $default  reduce using rule 24 (list_of_id1)


state 176

   49 ID_space: ID '=' . no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 259
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 177

   48 ID_space: ID '[' . no_set_expr ']'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 260
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 178

   63 spaceIDb: spaceIDb ',' . ID_space

    '['  shift, and go to state 261
    ID   shift, and go to state 87

    ID_space  go to state 262


state 179

   79 end: '}' .

    $default  reduce using rule 79 (end)


state 180

   96 instruction: begin instructions end .

    $default  reduce using rule 96 (instruction)


state 181

   83 declaration_for: type_of_dcl . $@4 list_of_dcls

    $default  reduce using rule 82 ($@4)

    $@4  go to state 263


state 182

   92 instruction: for_loop '(' declaration_for . ';' Expr ';' Expr ')' instruction

    ';'  shift, and go to state 264


state 183

   91 instruction: for_loop '(' Expr . ';' Expr ';' Expr ')' instruction
  106 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ';'  shift, and go to state 265


state 184

   93 instruction: while_loop '(' Expr . ')' instruction
  106 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ')'  shift, and go to state 266


state 185

    4 instructions: instructions . instruction
   88 instruction: try '{' instructions . '}' catchs

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30
    '}'         shift, and go to state 267

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 83
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 186

  106 Expr: Expr . ',' Expr
  106     | Expr ',' Expr .

    $default  reduce using rule 106 (Expr)


state 187

  113 no_comma_expr: no_set_expr '=' no_comma_expr .

    $default  reduce using rule 113 (no_comma_expr)


state 188

  114 no_comma_expr: no_set_expr PLUSEQ no_comma_expr .

    $default  reduce using rule 114 (no_comma_expr)


state 189

  115 no_comma_expr: no_set_expr MOINSEQ no_comma_expr .

    $default  reduce using rule 115 (no_comma_expr)


state 190

  116 no_comma_expr: no_set_expr MULEQ no_comma_expr .

    $default  reduce using rule 116 (no_comma_expr)


state 191

  117 no_comma_expr: no_set_expr DIVEQ no_comma_expr .

    $default  reduce using rule 117 (no_comma_expr)


state 192

  118 no_comma_expr: no_set_expr DOTMULEQ no_comma_expr .

    $default  reduce using rule 118 (no_comma_expr)


state 193

  119 no_comma_expr: no_set_expr DOTDIVEQ no_comma_expr .

    $default  reduce using rule 119 (no_comma_expr)


state 194

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  133                | no_ternary_expr GTGT no_ternary_expr .
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 133 (no_ternary_expr)


state 195

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  132                | no_ternary_expr LTLT no_ternary_expr .
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 132 (no_ternary_expr)


state 196

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  136                | no_ternary_expr '|' no_ternary_expr .
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 136 (no_ternary_expr)


state 197

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  137                | no_ternary_expr OR no_ternary_expr .
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 137 (no_ternary_expr)


state 198

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  134                | no_ternary_expr '&' no_ternary_expr .
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 134 (no_ternary_expr)


state 199

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  135                | no_ternary_expr AND no_ternary_expr .
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 135 (no_ternary_expr)


state 200

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr
  143                | no_ternary_expr NE no_ternary_expr .

    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 143 (no_ternary_expr)


state 201

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  142                | no_ternary_expr EQ no_ternary_expr .
  143                | no_ternary_expr . NE no_ternary_expr

    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 142 (no_ternary_expr)


state 202

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  138                | no_ternary_expr '<' no_ternary_expr .
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 138 (no_ternary_expr)


state 203

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  140                | no_ternary_expr '>' no_ternary_expr .
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 140 (no_ternary_expr)


state 204

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  141                | no_ternary_expr GE no_ternary_expr .
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 141 (no_ternary_expr)


state 205

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  139                | no_ternary_expr LE no_ternary_expr .
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 139 (no_ternary_expr)


state 206

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  130                | no_ternary_expr '+' no_ternary_expr .
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 130 (no_ternary_expr)


state 207

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  131                | no_ternary_expr '-' no_ternary_expr .
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 131 (no_ternary_expr)


state 208

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  125                | no_ternary_expr '*' no_ternary_expr .
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    $default  reduce using rule 125 (no_ternary_expr)


state 209

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  128                | no_ternary_expr '/' no_ternary_expr .
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    $default  reduce using rule 128 (no_ternary_expr)


state 210

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  129                | no_ternary_expr '%' no_ternary_expr .
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    $default  reduce using rule 129 (no_ternary_expr)


state 211

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  127                | no_ternary_expr DOTSLASH no_ternary_expr .
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    $default  reduce using rule 127 (no_ternary_expr)


state 212

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  126                | no_ternary_expr DOTSTAR no_ternary_expr .
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    $default  reduce using rule 126 (no_ternary_expr)


state 213

  121 no_set_expr: no_ternary_expr '?' no_ternary_expr . ':' no_ternary_expr
  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123
    ':'       shift, and go to state 268


state 214

  122 no_set_expr: no_ternary_expr ':' no_ternary_expr .
  123            | no_ternary_expr ':' no_ternary_expr . ':' no_ternary_expr
  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123
    ':'       shift, and go to state 269

    $default  reduce using rule 122 (no_set_expr)


state 215

  164 pow_expr: primary '^' unary_expr .

    $default  reduce using rule 164 (pow_expr)


state 216

  165 pow_expr: primary '_' unary_expr .

    $default  reduce using rule 165 (pow_expr)


state 217

  154 parameters: parameters . ',' FESPACE
  155           | parameters . ',' FESPACE1
  156           | parameters . ',' FESPACE3
  157           | parameters . ',' sub_script_expr
  158           | parameters . ',' id '=' no_set_expr
  172 primary: primary '(' parameters . ')'

    ','  shift, and go to state 244
    ')'  shift, and go to state 270


state 218

  175 primary: primary '[' ']' .

    $default  reduce using rule 175 (primary)


state 219

  173 primary: primary '[' sub_script_expr . ']'
  174        | primary '[' sub_script_expr . ',' sub_script_expr ']'

    ','  shift, and go to state 271
    ']'  shift, and go to state 272


state 220

  176 primary: primary '.' ID .

    $default  reduce using rule 176 (primary)


state 221

   94 instruction: IF '(' Expr ')' . instruction
   95            | IF '(' Expr ')' . instruction ELSE instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 273
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 222

  160 array: array ',' no_comma_expr .

    $default  reduce using rule 160 (array)


state 223

   38 parameters_list: ID . '=' no_set_expr
  167 primary: ID .

    '='  shift, and go to state 274

    $default  reduce using rule 167 (primary)


state 224

   35 parameters_list: FESPACE . ID
  177 primary: FESPACE . '.' ID
  178        | FESPACE . '(' parameters ')'

    '('  shift, and go to state 74
    '.'  shift, and go to state 75
    ID   shift, and go to state 275


state 225

   36 parameters_list: FESPACE1 . ID
  179 primary: FESPACE1 . '.' ID
  180        | FESPACE1 . '(' parameters ')'

    '('  shift, and go to state 76
    '.'  shift, and go to state 77
    ID   shift, and go to state 276


state 226

   37 parameters_list: FESPACE3 . ID
  181 primary: FESPACE3 . '.' ID
  182        | FESPACE3 . '(' parameters ')'

    '('  shift, and go to state 78
    '.'  shift, and go to state 79
    ID   shift, and go to state 277


state 227

   39 parameters_list: parameters_list . ',' no_set_expr
   40                | parameters_list . ',' id '=' no_set_expr
   66 fespace_def: ID '(' parameters_list . ')'

    ','  shift, and go to state 278
    ')'  shift, and go to state 279


state 228

   34 parameters_list: no_set_expr .

    $default  reduce using rule 34 (parameters_list)


state 229

   68 fespace_def_list: fespace_def_list ',' fespace_def .

    $default  reduce using rule 68 (fespace_def_list)


state 230

   44 type_of_dcl: TYPE '<' TYPE '>' .
   45            | TYPE '<' TYPE '>' . '[' TYPE ']'
   46            | TYPE '<' TYPE '>' . '[' TYPE ',' TYPE ']'

    '['  shift, and go to state 280

    $default  reduce using rule 44 (type_of_dcl)


state 231

  185 primary: TYPE '(' Expr ')' .

    $default  reduce using rule 185 (primary)


state 232

   43 type_of_dcl: TYPE '[' TYPE ',' . TYPE ']'

    TYPE  shift, and go to state 281


state 233

   42 type_of_dcl: TYPE '[' TYPE ']' .

    $default  reduce using rule 42 (type_of_dcl)


state 234

   73 declaration: FUNCTION ID '=' Expr . ';'
  106 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ';'  shift, and go to state 282


state 235

   14 list_of_id_args: '[' . list_of_id_args ']'

    '['       shift, and go to state 235
    ID        shift, and go to state 169
    TYPE      shift, and go to state 72
    FESPACE   shift, and go to state 236
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 237

    $default  reduce using rule 5 (list_of_id_args)

    list_of_id_args  go to state 283
    id               go to state 239
    type_of_dcl      go to state 240


state 236

    8 list_of_id_args: FESPACE . id
    9                | FESPACE . '&' id
   27 id: FESPACE .

    '&'       shift, and go to state 284
    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    $default  reduce using rule 27 (id)

    id  go to state 285


state 237

   10 list_of_id_args: FESPACE3 . id
   11                | FESPACE3 . '&' id
   28 id: FESPACE3 .

    '&'       shift, and go to state 286
    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    $default  reduce using rule 28 (id)

    id  go to state 287


state 238

   15 list_of_id_args: list_of_id_args . ',' id
   16                | list_of_id_args . ',' '[' list_of_id_args ']'
   17                | list_of_id_args . ',' id '=' no_comma_expr
   18                | list_of_id_args . ',' FESPACE id
   19                | list_of_id_args . ',' FESPACE '&' id
   20                | list_of_id_args . ',' FESPACE3 id
   21                | list_of_id_args . ',' FESPACE3 '&' id
   22                | list_of_id_args . ',' type_of_dcl id
   23                | list_of_id_args . ',' type_of_dcl '&' id
   77 declaration: FUNCTION ID '(' list_of_id_args . ')' $@3 '=' no_comma_expr ';'

    ','  shift, and go to state 288
    ')'  shift, and go to state 289


state 239

    6 list_of_id_args: id .
    7                | id . '=' no_comma_expr

    '='  shift, and go to state 290

    $default  reduce using rule 6 (list_of_id_args)


state 240

   12 list_of_id_args: type_of_dcl . id
   13                | type_of_dcl . '&' id

    '&'       shift, and go to state 291
    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 292


state 241

   75 declaration: FUNCTION type_of_dcl ID '(' . list_of_id_args ')' $@2 '{' instructions '}'

    '['       shift, and go to state 235
    ID        shift, and go to state 169
    TYPE      shift, and go to state 72
    FESPACE   shift, and go to state 236
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 237

    $default  reduce using rule 5 (list_of_id_args)

    list_of_id_args  go to state 293
    id               go to state 239
    type_of_dcl      go to state 240


state 242

  152 parameters: id '=' . no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 294
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 243

  146 sub_script_expr: no_ternary_expr ':' . no_ternary_expr
  147                | no_ternary_expr ':' . no_ternary_expr ':' no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 295
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 244

  154 parameters: parameters ',' . FESPACE
  155           | parameters ',' . FESPACE1
  156           | parameters ',' . FESPACE3
  157           | parameters ',' . sub_script_expr
  158           | parameters ',' . id '=' no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 148
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 296
    FESPACE1    shift, and go to state 297
    FESPACE3    shift, and go to state 298
    ':'         shift, and go to state 152

    id               go to state 299
    unop             go to state 45
    no_ternary_expr  go to state 154
    sub_script_expr  go to state 300
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 245

  178 primary: FESPACE '(' parameters ')' .

    $default  reduce using rule 178 (primary)


state 246

  180 primary: FESPACE1 '(' parameters ')' .

    $default  reduce using rule 180 (primary)


state 247

  182 primary: FESPACE3 '(' parameters ')' .

    $default  reduce using rule 182 (primary)


state 248

  103 bornes: '(' ID . '=' Expr ',' Expr ')'

    '='  shift, and go to state 301


state 249

   98 instruction: BORDER ID '[' array . ']' ';'
  160 array: array . ',' no_comma_expr

    ','  shift, and go to state 136
    ']'  shift, and go to state 302


state 250

  104 border_expr: bornes instruction .

    $default  reduce using rule 104 (border_expr)


state 251

   31 list_of_dcls: ID '=' . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 303
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 252

   32 list_of_dcls: ID '(' . parameters_list ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 223
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 224
    FESPACE1    shift, and go to state 225
    FESPACE3    shift, and go to state 226

    parameters_list  go to state 304
    unop             go to state 45
    no_set_expr      go to state 228
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 253

   33 list_of_dcls: list_of_dcls ',' . list_of_dcls

    ID  shift, and go to state 166

    list_of_dcls  go to state 305


state 254

   70 declaration: type_of_dcl $@1 list_of_dcls ';' .

    $default  reduce using rule 70 (declaration)


state 255

   59 fespace: fespace123 '<' TYPE '>' .

    $default  reduce using rule 59 (fespace)


state 256

   65 spaceIDs: fespace '[' TYPE ']' . spaceIDa

    '['  shift, and go to state 306
    ID   shift, and go to state 307

    ID_array_space  go to state 308
    spaceIDa        go to state 309


state 257

   25 list_of_id1: list_of_id1 ',' . id

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 310


state 258

   50 ID_space: '[' list_of_id1 ']' .
   51         | '[' list_of_id1 ']' . '[' no_set_expr ']'
   52         | '[' list_of_id1 ']' . '=' no_set_expr

    '='  shift, and go to state 311
    '['  shift, and go to state 312

    $default  reduce using rule 50 (ID_space)


state 259

   49 ID_space: ID '=' no_set_expr .

    $default  reduce using rule 49 (ID_space)


state 260

   48 ID_space: ID '[' no_set_expr . ']'

    ']'  shift, and go to state 313


state 261

   50 ID_space: '[' . list_of_id1 ']'
   51         | '[' . list_of_id1 ']' '[' no_set_expr ']'
   52         | '[' . list_of_id1 ']' '=' no_set_expr

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    list_of_id1  go to state 174
    id           go to state 175


state 262

   63 spaceIDb: spaceIDb ',' ID_space .

    $default  reduce using rule 63 (spaceIDb)


state 263

   83 declaration_for: type_of_dcl $@4 . list_of_dcls

    ID  shift, and go to state 166

    list_of_dcls  go to state 314


state 264

   92 instruction: for_loop '(' declaration_for ';' . Expr ';' Expr ')' instruction

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 315
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 265

   91 instruction: for_loop '(' Expr ';' . Expr ';' Expr ')' instruction

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 316
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 266

   93 instruction: while_loop '(' Expr ')' . instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 317
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 267

   88 instruction: try '{' instructions '}' . catchs

    CATCH  shift, and go to state 318

    catchs  go to state 319


state 268

  121 no_set_expr: no_ternary_expr '?' no_ternary_expr ':' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 320
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 269

  123 no_set_expr: no_ternary_expr ':' no_ternary_expr ':' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 321
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 270

  172 primary: primary '(' parameters ')' .

    $default  reduce using rule 172 (primary)


state 271

  174 primary: primary '[' sub_script_expr ',' . sub_script_expr ']'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56
    ':'         shift, and go to state 152

    unop             go to state 45
    no_ternary_expr  go to state 154
    sub_script_expr  go to state 322
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 272

  173 primary: primary '[' sub_script_expr ']' .

    $default  reduce using rule 173 (primary)


state 273

   94 instruction: IF '(' Expr ')' instruction .
   95            | IF '(' Expr ')' instruction . ELSE instruction

    ELSE  shift, and go to state 323

    ELSE      [reduce using rule 94 (instruction)]
    $default  reduce using rule 94 (instruction)


state 274

   38 parameters_list: ID '=' . no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 324
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 275

   35 parameters_list: FESPACE ID .

    $default  reduce using rule 35 (parameters_list)


state 276

   36 parameters_list: FESPACE1 ID .

    $default  reduce using rule 36 (parameters_list)


state 277

   37 parameters_list: FESPACE3 ID .

    $default  reduce using rule 37 (parameters_list)


state 278

   39 parameters_list: parameters_list ',' . no_set_expr
   40                | parameters_list ',' . id '=' no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 148
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 325
    FESPACE1    shift, and go to state 326
    FESPACE3    shift, and go to state 327

    id               go to state 328
    unop             go to state 45
    no_set_expr      go to state 329
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 279

   66 fespace_def: ID '(' parameters_list ')' .

    $default  reduce using rule 66 (fespace_def)


state 280

   45 type_of_dcl: TYPE '<' TYPE '>' '[' . TYPE ']'
   46            | TYPE '<' TYPE '>' '[' . TYPE ',' TYPE ']'

    TYPE  shift, and go to state 330


state 281

   43 type_of_dcl: TYPE '[' TYPE ',' TYPE . ']'

    ']'  shift, and go to state 331


state 282

   73 declaration: FUNCTION ID '=' Expr ';' .

    $default  reduce using rule 73 (declaration)


state 283

   14 list_of_id_args: '[' list_of_id_args . ']'
   15                | list_of_id_args . ',' id
   16                | list_of_id_args . ',' '[' list_of_id_args ']'
   17                | list_of_id_args . ',' id '=' no_comma_expr
   18                | list_of_id_args . ',' FESPACE id
   19                | list_of_id_args . ',' FESPACE '&' id
   20                | list_of_id_args . ',' FESPACE3 id
   21                | list_of_id_args . ',' FESPACE3 '&' id
   22                | list_of_id_args . ',' type_of_dcl id
   23                | list_of_id_args . ',' type_of_dcl '&' id

    ','  shift, and go to state 288
    ']'  shift, and go to state 332


state 284

    9 list_of_id_args: FESPACE '&' . id

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 333


state 285

    8 list_of_id_args: FESPACE id .

    $default  reduce using rule 8 (list_of_id_args)


state 286

   11 list_of_id_args: FESPACE3 '&' . id

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 334


state 287

   10 list_of_id_args: FESPACE3 id .

    $default  reduce using rule 10 (list_of_id_args)


state 288

   15 list_of_id_args: list_of_id_args ',' . id
   16                | list_of_id_args ',' . '[' list_of_id_args ']'
   17                | list_of_id_args ',' . id '=' no_comma_expr
   18                | list_of_id_args ',' . FESPACE id
   19                | list_of_id_args ',' . FESPACE '&' id
   20                | list_of_id_args ',' . FESPACE3 id
   21                | list_of_id_args ',' . FESPACE3 '&' id
   22                | list_of_id_args ',' . type_of_dcl id
   23                | list_of_id_args ',' . type_of_dcl '&' id

    '['       shift, and go to state 335
    ID        shift, and go to state 169
    TYPE      shift, and go to state 72
    FESPACE   shift, and go to state 336
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 337

    id           go to state 338
    type_of_dcl  go to state 339


state 289

   77 declaration: FUNCTION ID '(' list_of_id_args ')' . $@3 '=' no_comma_expr ';'

    $default  reduce using rule 76 ($@3)

    $@3  go to state 340


state 290

    7 list_of_id_args: id '=' . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 341
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 291

   13 list_of_id_args: type_of_dcl '&' . id

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 342


state 292

   12 list_of_id_args: type_of_dcl id .

    $default  reduce using rule 12 (list_of_id_args)


state 293

   15 list_of_id_args: list_of_id_args . ',' id
   16                | list_of_id_args . ',' '[' list_of_id_args ']'
   17                | list_of_id_args . ',' id '=' no_comma_expr
   18                | list_of_id_args . ',' FESPACE id
   19                | list_of_id_args . ',' FESPACE '&' id
   20                | list_of_id_args . ',' FESPACE3 id
   21                | list_of_id_args . ',' FESPACE3 '&' id
   22                | list_of_id_args . ',' type_of_dcl id
   23                | list_of_id_args . ',' type_of_dcl '&' id
   75 declaration: FUNCTION type_of_dcl ID '(' list_of_id_args . ')' $@2 '{' instructions '}'

    ','  shift, and go to state 288
    ')'  shift, and go to state 343


state 294

  152 parameters: id '=' no_set_expr .

    $default  reduce using rule 152 (parameters)


state 295

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr
  146 sub_script_expr: no_ternary_expr ':' no_ternary_expr .
  147                | no_ternary_expr ':' no_ternary_expr . ':' no_ternary_expr

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123
    ':'       shift, and go to state 344

    $default  reduce using rule 146 (sub_script_expr)


state 296

   27 id: FESPACE .
  154 parameters: parameters ',' FESPACE .
  177 primary: FESPACE . '.' ID
  178        | FESPACE . '(' parameters ')'

    '('  shift, and go to state 74
    '.'  shift, and go to state 75

    '='       reduce using rule 27 (id)
    $default  reduce using rule 154 (parameters)


state 297

   29 id: FESPACE1 .
  155 parameters: parameters ',' FESPACE1 .
  179 primary: FESPACE1 . '.' ID
  180        | FESPACE1 . '(' parameters ')'

    '('  shift, and go to state 76
    '.'  shift, and go to state 77

    '='       reduce using rule 29 (id)
    $default  reduce using rule 155 (parameters)


state 298

   28 id: FESPACE3 .
  156 parameters: parameters ',' FESPACE3 .
  181 primary: FESPACE3 . '.' ID
  182        | FESPACE3 . '(' parameters ')'

    '('  shift, and go to state 78
    '.'  shift, and go to state 79

    '='       reduce using rule 28 (id)
    $default  reduce using rule 156 (parameters)


state 299

  158 parameters: parameters ',' id . '=' no_set_expr

    '='  shift, and go to state 345


state 300

  157 parameters: parameters ',' sub_script_expr .

    $default  reduce using rule 157 (parameters)


state 301

  103 bornes: '(' ID '=' . Expr ',' Expr ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 346
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 302

   98 instruction: BORDER ID '[' array ']' . ';'

    ';'  shift, and go to state 347


state 303

   31 list_of_dcls: ID '=' no_comma_expr .

    $default  reduce using rule 31 (list_of_dcls)


state 304

   32 list_of_dcls: ID '(' parameters_list . ')'
   39 parameters_list: parameters_list . ',' no_set_expr
   40                | parameters_list . ',' id '=' no_set_expr

    ','  shift, and go to state 278
    ')'  shift, and go to state 348


state 305

   33 list_of_dcls: list_of_dcls . ',' list_of_dcls
   33             | list_of_dcls ',' list_of_dcls .

    $default  reduce using rule 33 (list_of_dcls)


state 306

   54 ID_array_space: '[' . list_of_id1 ']' '(' no_set_expr ')'

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    list_of_id1  go to state 349
    id           go to state 175


state 307

   53 ID_array_space: ID . '(' no_set_expr ')'

    '('  shift, and go to state 350


state 308

   60 spaceIDa: ID_array_space .

    $default  reduce using rule 60 (spaceIDa)


state 309

   61 spaceIDa: spaceIDa . ',' ID_array_space
   65 spaceIDs: fespace '[' TYPE ']' spaceIDa .

    ','  shift, and go to state 351

    $default  reduce using rule 65 (spaceIDs)


state 310

   25 list_of_id1: list_of_id1 ',' id .

    $default  reduce using rule 25 (list_of_id1)


state 311

   52 ID_space: '[' list_of_id1 ']' '=' . no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 352
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 312

   51 ID_space: '[' list_of_id1 ']' '[' . no_set_expr ']'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 353
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 313

   48 ID_space: ID '[' no_set_expr ']' .

    $default  reduce using rule 48 (ID_space)


state 314

   33 list_of_dcls: list_of_dcls . ',' list_of_dcls
   83 declaration_for: type_of_dcl $@4 list_of_dcls .

    ','  shift, and go to state 253

    $default  reduce using rule 83 (declaration_for)


state 315

   92 instruction: for_loop '(' declaration_for ';' Expr . ';' Expr ')' instruction
  106 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ';'  shift, and go to state 354


state 316

   91 instruction: for_loop '(' Expr ';' Expr . ';' Expr ')' instruction
  106 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ';'  shift, and go to state 355


state 317

   93 instruction: while_loop '(' Expr ')' instruction .

    $default  reduce using rule 93 (instruction)


state 318

  102 catchs: CATCH . '(' '.' '.' '.' ')' instruction

    '('  shift, and go to state 356


state 319

   88 instruction: try '{' instructions '}' catchs .

    $default  reduce using rule 88 (instruction)


state 320

  121 no_set_expr: no_ternary_expr '?' no_ternary_expr ':' no_ternary_expr .
  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 121 (no_set_expr)


state 321

  123 no_set_expr: no_ternary_expr ':' no_ternary_expr ':' no_ternary_expr .
  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 123 (no_set_expr)


state 322

  174 primary: primary '[' sub_script_expr ',' sub_script_expr . ']'

    ']'  shift, and go to state 357


state 323

   95 instruction: IF '(' Expr ')' instruction ELSE . instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 358
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 324

   38 parameters_list: ID '=' no_set_expr .

    $default  reduce using rule 38 (parameters_list)


state 325

   27 id: FESPACE .
  177 primary: FESPACE . '.' ID
  178        | FESPACE . '(' parameters ')'

    '('  shift, and go to state 74
    '.'  shift, and go to state 75

    $default  reduce using rule 27 (id)


state 326

   29 id: FESPACE1 .
  179 primary: FESPACE1 . '.' ID
  180        | FESPACE1 . '(' parameters ')'

    '('  shift, and go to state 76
    '.'  shift, and go to state 77

    $default  reduce using rule 29 (id)


state 327

   28 id: FESPACE3 .
  181 primary: FESPACE3 . '.' ID
  182        | FESPACE3 . '(' parameters ')'

    '('  shift, and go to state 78
    '.'  shift, and go to state 79

    $default  reduce using rule 28 (id)


state 328

   40 parameters_list: parameters_list ',' id . '=' no_set_expr

    '='  shift, and go to state 359


state 329

   39 parameters_list: parameters_list ',' no_set_expr .

    $default  reduce using rule 39 (parameters_list)


state 330

   45 type_of_dcl: TYPE '<' TYPE '>' '[' TYPE . ']'
   46            | TYPE '<' TYPE '>' '[' TYPE . ',' TYPE ']'

    ','  shift, and go to state 360
    ']'  shift, and go to state 361


state 331

   43 type_of_dcl: TYPE '[' TYPE ',' TYPE ']' .

    $default  reduce using rule 43 (type_of_dcl)


state 332

   14 list_of_id_args: '[' list_of_id_args ']' .

    $default  reduce using rule 14 (list_of_id_args)


state 333

    9 list_of_id_args: FESPACE '&' id .

    $default  reduce using rule 9 (list_of_id_args)


state 334

   11 list_of_id_args: FESPACE3 '&' id .

    $default  reduce using rule 11 (list_of_id_args)


state 335

   16 list_of_id_args: list_of_id_args ',' '[' . list_of_id_args ']'

    '['       shift, and go to state 235
    ID        shift, and go to state 169
    TYPE      shift, and go to state 72
    FESPACE   shift, and go to state 236
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 237

    $default  reduce using rule 5 (list_of_id_args)

    list_of_id_args  go to state 362
    id               go to state 239
    type_of_dcl      go to state 240


state 336

   18 list_of_id_args: list_of_id_args ',' FESPACE . id
   19                | list_of_id_args ',' FESPACE . '&' id
   27 id: FESPACE .

    '&'       shift, and go to state 363
    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    $default  reduce using rule 27 (id)

    id  go to state 364


state 337

   20 list_of_id_args: list_of_id_args ',' FESPACE3 . id
   21                | list_of_id_args ',' FESPACE3 . '&' id
   28 id: FESPACE3 .

    '&'       shift, and go to state 365
    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    $default  reduce using rule 28 (id)

    id  go to state 366


state 338

   15 list_of_id_args: list_of_id_args ',' id .
   17                | list_of_id_args ',' id . '=' no_comma_expr

    '='  shift, and go to state 367

    $default  reduce using rule 15 (list_of_id_args)


state 339

   22 list_of_id_args: list_of_id_args ',' type_of_dcl . id
   23                | list_of_id_args ',' type_of_dcl . '&' id

    '&'       shift, and go to state 368
    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 369


state 340

   77 declaration: FUNCTION ID '(' list_of_id_args ')' $@3 . '=' no_comma_expr ';'

    '='  shift, and go to state 370


state 341

    7 list_of_id_args: id '=' no_comma_expr .

    $default  reduce using rule 7 (list_of_id_args)


state 342

   13 list_of_id_args: type_of_dcl '&' id .

    $default  reduce using rule 13 (list_of_id_args)


state 343

   75 declaration: FUNCTION type_of_dcl ID '(' list_of_id_args ')' . $@2 '{' instructions '}'

    $default  reduce using rule 74 ($@2)

    $@2  go to state 371


state 344

  147 sub_script_expr: no_ternary_expr ':' no_ternary_expr ':' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 372
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 345

  158 parameters: parameters ',' id '=' . no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 373
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 346

  103 bornes: '(' ID '=' Expr . ',' Expr ')'
  106 Expr: Expr . ',' Expr

    ','  shift, and go to state 374


state 347

   98 instruction: BORDER ID '[' array ']' ';' .

    $default  reduce using rule 98 (instruction)


state 348

   32 list_of_dcls: ID '(' parameters_list ')' .

    $default  reduce using rule 32 (list_of_dcls)


state 349

   25 list_of_id1: list_of_id1 . ',' id
   54 ID_array_space: '[' list_of_id1 . ']' '(' no_set_expr ')'

    ','  shift, and go to state 257
    ']'  shift, and go to state 375


state 350

   53 ID_array_space: ID '(' . no_set_expr ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 376
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 351

   61 spaceIDa: spaceIDa ',' . ID_array_space

    '['  shift, and go to state 306
    ID   shift, and go to state 307

    ID_array_space  go to state 377


state 352

   52 ID_space: '[' list_of_id1 ']' '=' no_set_expr .

    $default  reduce using rule 52 (ID_space)


state 353

   51 ID_space: '[' list_of_id1 ']' '[' no_set_expr . ']'

    ']'  shift, and go to state 378


state 354

   92 instruction: for_loop '(' declaration_for ';' Expr ';' . Expr ')' instruction

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 379
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 355

   91 instruction: for_loop '(' Expr ';' Expr ';' . Expr ')' instruction

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 380
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 356

  102 catchs: CATCH '(' . '.' '.' '.' ')' instruction

    '.'  shift, and go to state 381


state 357

  174 primary: primary '[' sub_script_expr ',' sub_script_expr ']' .

    $default  reduce using rule 174 (primary)


state 358

   95 instruction: IF '(' Expr ')' instruction ELSE instruction .

    $default  reduce using rule 95 (instruction)


state 359

   40 parameters_list: parameters_list ',' id '=' . no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 382
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 360

   46 type_of_dcl: TYPE '<' TYPE '>' '[' TYPE ',' . TYPE ']'

    TYPE  shift, and go to state 383


state 361

   45 type_of_dcl: TYPE '<' TYPE '>' '[' TYPE ']' .

    $default  reduce using rule 45 (type_of_dcl)


state 362

   15 list_of_id_args: list_of_id_args . ',' id
   16                | list_of_id_args . ',' '[' list_of_id_args ']'
   16                | list_of_id_args ',' '[' list_of_id_args . ']'
   17                | list_of_id_args . ',' id '=' no_comma_expr
   18                | list_of_id_args . ',' FESPACE id
   19                | list_of_id_args . ',' FESPACE '&' id
   20                | list_of_id_args . ',' FESPACE3 id
   21                | list_of_id_args . ',' FESPACE3 '&' id
   22                | list_of_id_args . ',' type_of_dcl id
   23                | list_of_id_args . ',' type_of_dcl '&' id

    ','  shift, and go to state 288
    ']'  shift, and go to state 384


state 363

   19 list_of_id_args: list_of_id_args ',' FESPACE '&' . id

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 385


state 364

   18 list_of_id_args: list_of_id_args ',' FESPACE id .

    $default  reduce using rule 18 (list_of_id_args)


state 365

   21 list_of_id_args: list_of_id_args ',' FESPACE3 '&' . id

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 386


state 366

   20 list_of_id_args: list_of_id_args ',' FESPACE3 id .

    $default  reduce using rule 20 (list_of_id_args)


state 367

   17 list_of_id_args: list_of_id_args ',' id '=' . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 387
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 368

   23 list_of_id_args: list_of_id_args ',' type_of_dcl '&' . id

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 388


state 369

   22 list_of_id_args: list_of_id_args ',' type_of_dcl id .

    $default  reduce using rule 22 (list_of_id_args)


state 370

   77 declaration: FUNCTION ID '(' list_of_id_args ')' $@3 '=' . no_comma_expr ';'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 389
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 371

   75 declaration: FUNCTION type_of_dcl ID '(' list_of_id_args ')' $@2 . '{' instructions '}'

    '{'  shift, and go to state 390


state 372

  125 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  126                | no_ternary_expr . DOTSTAR no_ternary_expr
  127                | no_ternary_expr . DOTSLASH no_ternary_expr
  128                | no_ternary_expr . '/' no_ternary_expr
  129                | no_ternary_expr . '%' no_ternary_expr
  130                | no_ternary_expr . '+' no_ternary_expr
  131                | no_ternary_expr . '-' no_ternary_expr
  132                | no_ternary_expr . LTLT no_ternary_expr
  133                | no_ternary_expr . GTGT no_ternary_expr
  134                | no_ternary_expr . '&' no_ternary_expr
  135                | no_ternary_expr . AND no_ternary_expr
  136                | no_ternary_expr . '|' no_ternary_expr
  137                | no_ternary_expr . OR no_ternary_expr
  138                | no_ternary_expr . '<' no_ternary_expr
  139                | no_ternary_expr . LE no_ternary_expr
  140                | no_ternary_expr . '>' no_ternary_expr
  141                | no_ternary_expr . GE no_ternary_expr
  142                | no_ternary_expr . EQ no_ternary_expr
  143                | no_ternary_expr . NE no_ternary_expr
  147 sub_script_expr: no_ternary_expr ':' no_ternary_expr ':' no_ternary_expr .

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 147 (sub_script_expr)


state 373

  158 parameters: parameters ',' id '=' no_set_expr .

    $default  reduce using rule 158 (parameters)


state 374

  103 bornes: '(' ID '=' Expr ',' . Expr ')'
  106 Expr: Expr ',' . Expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 391
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 375

   54 ID_array_space: '[' list_of_id1 ']' . '(' no_set_expr ')'

    '('  shift, and go to state 392


state 376

   53 ID_array_space: ID '(' no_set_expr . ')'

    ')'  shift, and go to state 393


state 377

   61 spaceIDa: spaceIDa ',' ID_array_space .

    $default  reduce using rule 61 (spaceIDa)


state 378

   51 ID_space: '[' list_of_id1 ']' '[' no_set_expr ']' .

    $default  reduce using rule 51 (ID_space)


state 379

   92 instruction: for_loop '(' declaration_for ';' Expr ';' Expr . ')' instruction
  106 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ')'  shift, and go to state 394


state 380

   91 instruction: for_loop '(' Expr ';' Expr ';' Expr . ')' instruction
  106 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ')'  shift, and go to state 395


state 381

  102 catchs: CATCH '(' '.' . '.' '.' ')' instruction

    '.'  shift, and go to state 396


state 382

   40 parameters_list: parameters_list ',' id '=' no_set_expr .

    $default  reduce using rule 40 (parameters_list)


state 383

   46 type_of_dcl: TYPE '<' TYPE '>' '[' TYPE ',' TYPE . ']'

    ']'  shift, and go to state 397


state 384

   16 list_of_id_args: list_of_id_args ',' '[' list_of_id_args ']' .

    $default  reduce using rule 16 (list_of_id_args)


state 385

   19 list_of_id_args: list_of_id_args ',' FESPACE '&' id .

    $default  reduce using rule 19 (list_of_id_args)


state 386

   21 list_of_id_args: list_of_id_args ',' FESPACE3 '&' id .

    $default  reduce using rule 21 (list_of_id_args)


state 387

   17 list_of_id_args: list_of_id_args ',' id '=' no_comma_expr .

    $default  reduce using rule 17 (list_of_id_args)


state 388

   23 list_of_id_args: list_of_id_args ',' type_of_dcl '&' id .

    $default  reduce using rule 23 (list_of_id_args)


state 389

   77 declaration: FUNCTION ID '(' list_of_id_args ')' $@3 '=' no_comma_expr . ';'

    ';'  shift, and go to state 398


state 390

   75 declaration: FUNCTION type_of_dcl ID '(' list_of_id_args ')' $@2 '{' . instructions '}'

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    instructions     go to state 399
    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 43
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 391

  103 bornes: '(' ID '=' Expr ',' Expr . ')'
  106 Expr: Expr . ',' Expr
  106     | Expr ',' Expr .

    ')'  shift, and go to state 400

    $default  reduce using rule 106 (Expr)


state 392

   54 ID_array_space: '[' list_of_id1 ']' '(' . no_set_expr ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 401
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 393

   53 ID_array_space: ID '(' no_set_expr ')' .

    $default  reduce using rule 53 (ID_array_space)


state 394

   92 instruction: for_loop '(' declaration_for ';' Expr ';' Expr ')' . instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 402
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 395

   91 instruction: for_loop '(' Expr ';' Expr ';' Expr ')' . instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 403
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 396

  102 catchs: CATCH '(' '.' '.' . '.' ')' instruction

    '.'  shift, and go to state 404


state 397

   46 type_of_dcl: TYPE '<' TYPE '>' '[' TYPE ',' TYPE ']' .

    $default  reduce using rule 46 (type_of_dcl)


state 398

   77 declaration: FUNCTION ID '(' list_of_id_args ')' $@3 '=' no_comma_expr ';' .

    $default  reduce using rule 77 (declaration)


state 399

    4 instructions: instructions . instruction
   75 declaration: FUNCTION type_of_dcl ID '(' list_of_id_args ')' $@2 '{' instructions . '}'

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30
    '}'         shift, and go to state 405

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 83
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 400

  103 bornes: '(' ID '=' Expr ',' Expr ')' .

    $default  reduce using rule 103 (bornes)


state 401

   54 ID_array_space: '[' list_of_id1 ']' '(' no_set_expr . ')'

    ')'  shift, and go to state 406


state 402

   92 instruction: for_loop '(' declaration_for ';' Expr ';' Expr ')' instruction .

    $default  reduce using rule 92 (instruction)


state 403

   91 instruction: for_loop '(' Expr ';' Expr ';' Expr ')' instruction .

    $default  reduce using rule 91 (instruction)


state 404

  102 catchs: CATCH '(' '.' '.' '.' . ')' instruction

    ')'  shift, and go to state 407


state 405

   75 declaration: FUNCTION type_of_dcl ID '(' list_of_id_args ')' $@2 '{' instructions '}' .

    $default  reduce using rule 75 (declaration)


state 406

   54 ID_array_space: '[' list_of_id1 ']' '(' no_set_expr ')' .

    $default  reduce using rule 54 (ID_array_space)


state 407

  102 catchs: CATCH '(' '.' '.' '.' ')' . instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 408
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 408

  102 catchs: CATCH '(' '.' '.' '.' ')' instruction .

    $default  reduce using rule 102 (catchs)
