Terminals unused in grammar

   SET
   IDPARAM
   BIDON
   THROW
   ARROW
   CURVE
   SOLVE


State 273 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: input ENDOFFILE

    2 input: instructions

    3 instructions: instruction
    4             | instructions instruction

    5 list_of_id_args: /* empty */
    6                | id
    7                | id '=' no_comma_expr
    8                | FESPACE id
    9                | FESPACE '&' id
   10                | FESPACE3 id
   11                | FESPACE3 '&' id
   12                | type_of_dcl id
   13                | type_of_dcl '&' id
   14                | '[' list_of_id_args ']'
   15                | list_of_id_args ',' id
   16                | list_of_id_args ',' '[' list_of_id_args ']'
   17                | list_of_id_args ',' id '=' no_comma_expr
   18                | list_of_id_args ',' FESPACE id
   19                | list_of_id_args ',' FESPACE '&' id
   20                | list_of_id_args ',' FESPACE3 id
   21                | list_of_id_args ',' FESPACE3 '&' id
   22                | list_of_id_args ',' type_of_dcl id
   23                | list_of_id_args ',' type_of_dcl '&' id

   24 list_of_id1: id
   25            | list_of_id1 ',' id

   26 id: ID
   27   | FESPACE
   28   | FESPACE3
   29   | FESPACE1

   30 list_of_dcls: ID
   31             | ID '=' no_comma_expr
   32             | ID '(' parameters_list ')'
   33             | list_of_dcls ',' list_of_dcls

   34 parameters_list: no_set_expr
   35                | FESPACE ID
   36                | FESPACE1 ID
   37                | FESPACE3 ID
   38                | ID '=' no_set_expr
   39                | parameters_list ',' no_set_expr
   40                | parameters_list ',' id '=' no_set_expr

   41 type_of_dcl: TYPE
   42            | TYPE '[' TYPE ']'
   43            | TYPE '[' TYPE ']' '[' TYPE ']'
   44            | TYPE '[' TYPE ',' TYPE ']'
   45            | TYPE '[' TYPE ',' TYPE ']' '[' TYPE ']'
   46            | TYPE '<' TYPE '>'
   47            | TYPE '<' TYPE '>' '[' TYPE ']'
   48            | TYPE '<' TYPE '>' '[' TYPE ',' TYPE ']'

   49 ID_space: ID
   50         | ID '[' no_set_expr ']'
   51         | ID '=' no_set_expr
   52         | '[' list_of_id1 ']'
   53         | '[' list_of_id1 ']' '[' no_set_expr ']'
   54         | '[' list_of_id1 ']' '=' no_set_expr

   55 ID_array_space: ID '(' no_set_expr ')'
   56               | '[' list_of_id1 ']' '(' no_set_expr ')'

   57 fespace123: FESPACE
   58           | FESPACE1
   59           | FESPACE3

   60 fespace: fespace123
   61        | fespace123 '<' TYPE '>'

   62 spaceIDa: ID_array_space
   63         | spaceIDa ',' ID_array_space

   64 spaceIDb: ID_space
   65         | spaceIDb ',' ID_space

   66 spaceIDs: fespace spaceIDb
   67         | fespace '[' TYPE ']' spaceIDa

   68 fespace_def: ID '(' parameters_list ')'

   69 fespace_def_list: fespace_def
   70                 | fespace_def_list ',' fespace_def

   71 $@1: /* empty */

   72 declaration: type_of_dcl $@1 list_of_dcls ';'
   73            | FESPACEID fespace_def_list ';'
   74            | spaceIDs ';'
   75            | FUNCTION ID '=' Expr ';'

   76 $@2: /* empty */

   77 declaration: FUNCTION type_of_dcl ID '(' list_of_id_args ')' $@2 '{' instructions '}'

   78 $@3: /* empty */

   79 declaration: FUNCTION ID '(' list_of_id_args ')' $@3 '=' no_comma_expr ';'

   80 begin: '{'

   81 end: '}'

   82 for_loop: FOR

   83 while_loop: WHILE

   84 $@4: /* empty */

   85 declaration_for: type_of_dcl $@4 list_of_dcls

   86 try: TRY

   87 instruction: ';'
   88            | INCLUDE STRING
   89            | LOAD STRING
   90            | try '{' instructions '}' catchs
   91            | Expr ';'
   92            | declaration
   93            | for_loop '(' Expr ';' Expr ';' Expr ')' instruction
   94            | for_loop '(' declaration_for ';' Expr ';' Expr ')' instruction
   95            | while_loop '(' Expr ')' instruction
   96            | IF '(' Expr ')' instruction
   97            | IF '(' Expr ')' instruction ELSE instruction
   98            | begin instructions end
   99            | BORDER ID border_expr
  100            | BORDER ID '[' array ']' ';'
  101            | BREAK ';'
  102            | CONTINUE ';'
  103            | RETURN Expr ';'

  104 catchs: CATCH '(' '.' '.' '.' ')' instruction

  105 bornes: '(' ID '=' Expr ',' Expr ')'

  106 border_expr: bornes instruction

  107 Expr: no_comma_expr
  108     | Expr ',' Expr

  109 unop: '-'
  110     | '+'
  111     | '!'
  112     | PLUSPLUS
  113     | MOINSMOINS

  114 no_comma_expr: no_set_expr
  115              | no_set_expr '=' no_comma_expr
  116              | no_set_expr PLUSEQ no_comma_expr
  117              | no_set_expr MOINSEQ no_comma_expr
  118              | no_set_expr MULEQ no_comma_expr
  119              | no_set_expr DIVEQ no_comma_expr
  120              | no_set_expr DOTMULEQ no_comma_expr
  121              | no_set_expr DOTDIVEQ no_comma_expr

  122 no_set_expr: no_ternary_expr
  123            | no_ternary_expr '?' no_ternary_expr ':' no_ternary_expr
  124            | no_ternary_expr ':' no_ternary_expr
  125            | no_ternary_expr ':' no_ternary_expr ':' no_ternary_expr

  126 no_ternary_expr: unary_expr
  127                | no_ternary_expr '*' no_ternary_expr
  128                | no_ternary_expr DOTSTAR no_ternary_expr
  129                | no_ternary_expr DOTSLASH no_ternary_expr
  130                | no_ternary_expr '/' no_ternary_expr
  131                | no_ternary_expr '%' no_ternary_expr
  132                | no_ternary_expr '+' no_ternary_expr
  133                | no_ternary_expr '-' no_ternary_expr
  134                | no_ternary_expr LTLT no_ternary_expr
  135                | no_ternary_expr GTGT no_ternary_expr
  136                | no_ternary_expr '&' no_ternary_expr
  137                | no_ternary_expr AND no_ternary_expr
  138                | no_ternary_expr '|' no_ternary_expr
  139                | no_ternary_expr OR no_ternary_expr
  140                | no_ternary_expr '<' no_ternary_expr
  141                | no_ternary_expr LE no_ternary_expr
  142                | no_ternary_expr '>' no_ternary_expr
  143                | no_ternary_expr GE no_ternary_expr
  144                | no_ternary_expr EQ no_ternary_expr
  145                | no_ternary_expr NE no_ternary_expr

  146 sub_script_expr: no_ternary_expr
  147                | ':'
  148                | no_ternary_expr ':' no_ternary_expr
  149                | no_ternary_expr ':' no_ternary_expr ':' no_ternary_expr

  150 parameters: /* empty */
  151           | FESPACE
  152           | FESPACE1
  153           | FESPACE3
  154           | id '=' no_set_expr
  155           | sub_script_expr
  156           | parameters ',' FESPACE
  157           | parameters ',' FESPACE1
  158           | parameters ',' FESPACE3
  159           | parameters ',' sub_script_expr
  160           | parameters ',' id '=' no_set_expr

  161 array: no_comma_expr
  162      | array ',' no_comma_expr

  163 unary_expr: pow_expr
  164           | unop pow_expr

  165 pow_expr: primary
  166         | primary '^' unary_expr
  167         | primary '_' unary_expr
  168         | primary '\''

  169 primary: ID
  170        | LNUM
  171        | DNUM
  172        | CNUM
  173        | STRING
  174        | primary '(' parameters ')'
  175        | primary '[' sub_script_expr ']'
  176        | primary '[' sub_script_expr ',' sub_script_expr ']'
  177        | primary '[' ']'
  178        | primary '.' ID
  179        | FESPACE '.' ID
  180        | FESPACE '(' parameters ')'
  181        | FESPACE1 '.' ID
  182        | FESPACE1 '(' parameters ')'
  183        | FESPACE3 '.' ID
  184        | FESPACE3 '(' parameters ')'
  185        | primary PLUSPLUS
  186        | primary MOINSMOINS
  187        | TYPE '(' Expr ')'
  188        | '(' Expr ')'
  189        | '[' array ']'


Terminals, with rules where they appear

$end (0) 0
'!' (33) 111
'%' (37) 131
'&' (38) 9 11 13 19 21 23 136
'\'' (39) 168
'(' (40) 32 55 56 68 77 79 93 94 95 96 97 104 105 174 180 182 184 187
    188
')' (41) 32 55 56 68 77 79 93 94 95 96 97 104 105 174 180 182 184 187
    188
'*' (42) 127
'+' (43) 110 132
',' (44) 15 16 17 18 19 20 21 22 23 25 33 39 40 44 45 48 63 65 70 105
    108 156 157 158 159 160 162 176
'-' (45) 109 133
'.' (46) 104 178 179 181 183
'/' (47) 130
':' (58) 123 124 125 147 148 149
';' (59) 72 73 74 75 79 87 91 93 94 100 101 102 103
'<' (60) 46 47 48 61 140
'=' (61) 7 17 31 38 40 51 54 75 79 105 115 154 160
'>' (62) 46 47 48 61 142
'?' (63) 123
'[' (91) 14 16 42 43 44 45 47 48 50 52 53 54 56 67 100 175 176 177
    189
']' (93) 14 16 42 43 44 45 47 48 50 52 53 54 56 67 100 175 176 177
    189
'^' (94) 166
'_' (95) 167
'{' (123) 77 80 90
'|' (124) 138
'}' (125) 77 81 90
error (256)
IF (258) 96 97
ELSE (259) 97
SET (260)
GTGT (261) 135
LTLT (262) 134
OR (263) 139
AND (264) 137
NE (265) 145
EQ (266) 144
GE (267) 143
LE (268) 141
DOTSLASH (269) 129
DOTSTAR (270) 128
MOINSMOINS (271) 113 186
PLUSPLUS (272) 112 185
UNARY (273)
LNUM (274) 170
DNUM (275) 171
CNUM (276) 172
ID (277) 26 30 31 32 35 36 37 38 49 50 51 55 68 75 77 79 99 100 105
    169 178 179 181 183
FESPACEID (278) 73
IDPARAM (279)
STRING (280) 88 89 173
ENDOFFILE (281) 1
INCLUDE (282) 88
LOAD (283) 89
BIDON (284)
FOR (285) 82
WHILE (286) 83
BREAK (287) 101
CONTINUE (288) 102
RETURN (289) 103
TRY (290) 86
CATCH (291) 104
THROW (292)
TYPE (293) 41 42 43 44 45 46 47 48 61 67 187
FUNCTION (294) 75 77 79
FESPACE (295) 8 9 18 19 27 35 57 151 156 179 180
FESPACE1 (296) 29 36 58 152 157 181 182
FESPACE3 (297) 10 11 20 21 28 37 59 153 158 183 184
PLUSEQ (298) 116
MOINSEQ (299) 117
MULEQ (300) 118
DIVEQ (301) 119
DOTMULEQ (302) 120
DOTDIVEQ (303) 121
ARROW (304)
BORDER (305) 99 100
CURVE (306)
SOLVE (307)


Nonterminals, with rules where they appear

$accept (78)
    on left: 0
start (79)
    on left: 1, on right: 0
input (80)
    on left: 2, on right: 1
instructions (81)
    on left: 3 4, on right: 2 4 77 90 98
list_of_id_args (82)
    on left: 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23, on right:
    14 15 16 17 18 19 20 21 22 23 77 79
list_of_id1 (83)
    on left: 24 25, on right: 25 52 53 54 56
id (84)
    on left: 26 27 28 29, on right: 6 7 8 9 10 11 12 13 15 17 18 19
    20 21 22 23 24 25 40 154 160
list_of_dcls (85)
    on left: 30 31 32 33, on right: 33 72 85
parameters_list (86)
    on left: 34 35 36 37 38 39 40, on right: 32 39 40 68
type_of_dcl (87)
    on left: 41 42 43 44 45 46 47 48, on right: 12 13 22 23 72 77 85
ID_space (88)
    on left: 49 50 51 52 53 54, on right: 64 65
ID_array_space (89)
    on left: 55 56, on right: 62 63
fespace123 (90)
    on left: 57 58 59, on right: 60 61
fespace (91)
    on left: 60 61, on right: 66 67
spaceIDa (92)
    on left: 62 63, on right: 63 67
spaceIDb (93)
    on left: 64 65, on right: 65 66
spaceIDs (94)
    on left: 66 67, on right: 74
fespace_def (95)
    on left: 68, on right: 69 70
fespace_def_list (96)
    on left: 69 70, on right: 70 73
declaration (97)
    on left: 72 73 74 75 77 79, on right: 92
$@1 (98)
    on left: 71, on right: 72
$@2 (99)
    on left: 76, on right: 77
$@3 (100)
    on left: 78, on right: 79
begin (101)
    on left: 80, on right: 98
end (102)
    on left: 81, on right: 98
for_loop (103)
    on left: 82, on right: 93 94
while_loop (104)
    on left: 83, on right: 95
declaration_for (105)
    on left: 85, on right: 94
$@4 (106)
    on left: 84, on right: 85
try (107)
    on left: 86, on right: 90
instruction (108)
    on left: 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103,
    on right: 3 4 93 94 95 96 97 104 106
catchs (109)
    on left: 104, on right: 90
bornes (110)
    on left: 105, on right: 106
border_expr (111)
    on left: 106, on right: 99
Expr (112)
    on left: 107 108, on right: 75 91 93 94 95 96 97 103 105 108 187
    188
unop (113)
    on left: 109 110 111 112 113, on right: 164
no_comma_expr (114)
    on left: 114 115 116 117 118 119 120 121, on right: 7 17 31 79
    107 115 116 117 118 119 120 121 161 162
no_set_expr (115)
    on left: 122 123 124 125, on right: 34 38 39 40 50 51 53 54 55
    56 114 115 116 117 118 119 120 121 154 160
no_ternary_expr (116)
    on left: 126 127 128 129 130 131 132 133 134 135 136 137 138 139
    140 141 142 143 144 145, on right: 122 123 124 125 127 128 129
    130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145
    146 148 149
sub_script_expr (117)
    on left: 146 147 148 149, on right: 155 159 175 176
parameters (118)
    on left: 150 151 152 153 154 155 156 157 158 159 160, on right:
    156 157 158 159 160 174 180 182 184
array (119)
    on left: 161 162, on right: 100 162 189
unary_expr (120)
    on left: 163 164, on right: 126 166 167
pow_expr (121)
    on left: 165 166 167 168, on right: 163 164
primary (122)
    on left: 169 170 171 172 173 174 175 176 177 178 179 180 181 182
    183 184 185 186 187 188 189, on right: 165 166 167 168 174 175
    176 177 178 185 186


state 0

    0 $accept: . start $end

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    start            go to state 31
    input            go to state 32
    instructions     go to state 33
    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 43
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 1

   96 instruction: IF . '(' Expr ')' instruction
   97            | IF . '(' Expr ')' instruction ELSE instruction

    '('  shift, and go to state 52


state 2

  110 unop: '+' .

    $default  reduce using rule 110 (unop)


state 3

  109 unop: '-' .

    $default  reduce using rule 109 (unop)


state 4

  111 unop: '!' .

    $default  reduce using rule 111 (unop)


state 5

  113 unop: MOINSMOINS .

    $default  reduce using rule 113 (unop)


state 6

  112 unop: PLUSPLUS .

    $default  reduce using rule 112 (unop)


state 7

  188 primary: '(' . Expr ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 57
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 8

  189 primary: '[' . array ']'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 58
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    array            go to state 59
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 9

  170 primary: LNUM .

    $default  reduce using rule 170 (primary)


state 10

  171 primary: DNUM .

    $default  reduce using rule 171 (primary)


state 11

  172 primary: CNUM .

    $default  reduce using rule 172 (primary)


state 12

  169 primary: ID .

    $default  reduce using rule 169 (primary)


state 13

   73 declaration: FESPACEID . fespace_def_list ';'

    ID  shift, and go to state 60

    fespace_def       go to state 61
    fespace_def_list  go to state 62


state 14

  173 primary: STRING .

    $default  reduce using rule 173 (primary)


state 15

   88 instruction: INCLUDE . STRING

    STRING  shift, and go to state 63


state 16

   89 instruction: LOAD . STRING

    STRING  shift, and go to state 64


state 17

   82 for_loop: FOR .

    $default  reduce using rule 82 (for_loop)


state 18

   83 while_loop: WHILE .

    $default  reduce using rule 83 (while_loop)


state 19

  101 instruction: BREAK . ';'

    ';'  shift, and go to state 65


state 20

  102 instruction: CONTINUE . ';'

    ';'  shift, and go to state 66


state 21

  103 instruction: RETURN . Expr ';'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 67
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 22

   86 try: TRY .

    $default  reduce using rule 86 (try)


state 23

   41 type_of_dcl: TYPE .
   42            | TYPE . '[' TYPE ']'
   43            | TYPE . '[' TYPE ']' '[' TYPE ']'
   44            | TYPE . '[' TYPE ',' TYPE ']'
   45            | TYPE . '[' TYPE ',' TYPE ']' '[' TYPE ']'
   46            | TYPE . '<' TYPE '>'
   47            | TYPE . '<' TYPE '>' '[' TYPE ']'
   48            | TYPE . '<' TYPE '>' '[' TYPE ',' TYPE ']'
  187 primary: TYPE . '(' Expr ')'

    '<'  shift, and go to state 68
    '('  shift, and go to state 69
    '['  shift, and go to state 70

    $default  reduce using rule 41 (type_of_dcl)


state 24

   75 declaration: FUNCTION . ID '=' Expr ';'
   77            | FUNCTION . type_of_dcl ID '(' list_of_id_args ')' $@2 '{' instructions '}'
   79            | FUNCTION . ID '(' list_of_id_args ')' $@3 '=' no_comma_expr ';'

    ID    shift, and go to state 71
    TYPE  shift, and go to state 72

    type_of_dcl  go to state 73


state 25

   57 fespace123: FESPACE .
  179 primary: FESPACE . '.' ID
  180        | FESPACE . '(' parameters ')'

    '('  shift, and go to state 74
    '.'  shift, and go to state 75

    $default  reduce using rule 57 (fespace123)


state 26

   58 fespace123: FESPACE1 .
  181 primary: FESPACE1 . '.' ID
  182        | FESPACE1 . '(' parameters ')'

    '('  shift, and go to state 76
    '.'  shift, and go to state 77

    $default  reduce using rule 58 (fespace123)


state 27

   59 fespace123: FESPACE3 .
  183 primary: FESPACE3 . '.' ID
  184        | FESPACE3 . '(' parameters ')'

    '('  shift, and go to state 78
    '.'  shift, and go to state 79

    $default  reduce using rule 59 (fespace123)


state 28

   99 instruction: BORDER . ID border_expr
  100            | BORDER . ID '[' array ']' ';'

    ID  shift, and go to state 80


state 29

   87 instruction: ';' .

    $default  reduce using rule 87 (instruction)


state 30

   80 begin: '{' .

    $default  reduce using rule 80 (begin)


state 31

    0 $accept: start . $end

    $end  shift, and go to state 81


state 32

    1 start: input . ENDOFFILE

    ENDOFFILE  shift, and go to state 82


state 33

    2 input: instructions .
    4 instructions: instructions . instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    $default  reduce using rule 2 (input)

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 83
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 34

   72 declaration: type_of_dcl . $@1 list_of_dcls ';'

    $default  reduce using rule 71 ($@1)

    $@1  go to state 84


state 35

   60 fespace: fespace123 .
   61        | fespace123 . '<' TYPE '>'

    '<'  shift, and go to state 85

    $default  reduce using rule 60 (fespace)


state 36

   66 spaceIDs: fespace . spaceIDb
   67         | fespace . '[' TYPE ']' spaceIDa

    '['  shift, and go to state 86
    ID   shift, and go to state 87

    ID_space  go to state 88
    spaceIDb  go to state 89


state 37

   74 declaration: spaceIDs . ';'

    ';'  shift, and go to state 90


state 38

   92 instruction: declaration .

    $default  reduce using rule 92 (instruction)


state 39

   98 instruction: begin . instructions end

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    instructions     go to state 91
    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 43
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 40

   93 instruction: for_loop . '(' Expr ';' Expr ';' Expr ')' instruction
   94            | for_loop . '(' declaration_for ';' Expr ';' Expr ')' instruction

    '('  shift, and go to state 92


state 41

   95 instruction: while_loop . '(' Expr ')' instruction

    '('  shift, and go to state 93


state 42

   90 instruction: try . '{' instructions '}' catchs

    '{'  shift, and go to state 94


state 43

    3 instructions: instruction .

    $default  reduce using rule 3 (instructions)


state 44

   91 instruction: Expr . ';'
  108 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ';'  shift, and go to state 96


state 45

  164 unary_expr: unop . pow_expr

    '('       shift, and go to state 7
    '['       shift, and go to state 8
    LNUM      shift, and go to state 9
    DNUM      shift, and go to state 10
    CNUM      shift, and go to state 11
    ID        shift, and go to state 12
    STRING    shift, and go to state 14
    TYPE      shift, and go to state 53
    FESPACE   shift, and go to state 54
    FESPACE1  shift, and go to state 55
    FESPACE3  shift, and go to state 56

    pow_expr  go to state 97
    primary   go to state 51


state 46

  107 Expr: no_comma_expr .

    $default  reduce using rule 107 (Expr)


state 47

  114 no_comma_expr: no_set_expr .
  115              | no_set_expr . '=' no_comma_expr
  116              | no_set_expr . PLUSEQ no_comma_expr
  117              | no_set_expr . MOINSEQ no_comma_expr
  118              | no_set_expr . MULEQ no_comma_expr
  119              | no_set_expr . DIVEQ no_comma_expr
  120              | no_set_expr . DOTMULEQ no_comma_expr
  121              | no_set_expr . DOTDIVEQ no_comma_expr

    '='       shift, and go to state 98
    PLUSEQ    shift, and go to state 99
    MOINSEQ   shift, and go to state 100
    MULEQ     shift, and go to state 101
    DIVEQ     shift, and go to state 102
    DOTMULEQ  shift, and go to state 103
    DOTDIVEQ  shift, and go to state 104

    $default  reduce using rule 114 (no_comma_expr)


state 48

  122 no_set_expr: no_ternary_expr .
  123            | no_ternary_expr . '?' no_ternary_expr ':' no_ternary_expr
  124            | no_ternary_expr . ':' no_ternary_expr
  125            | no_ternary_expr . ':' no_ternary_expr ':' no_ternary_expr
  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123
    '?'       shift, and go to state 124
    ':'       shift, and go to state 125

    $default  reduce using rule 122 (no_set_expr)


state 49

  126 no_ternary_expr: unary_expr .

    $default  reduce using rule 126 (no_ternary_expr)


state 50

  163 unary_expr: pow_expr .

    $default  reduce using rule 163 (unary_expr)


state 51

  165 pow_expr: primary .
  166         | primary . '^' unary_expr
  167         | primary . '_' unary_expr
  168         | primary . '\''
  174 primary: primary . '(' parameters ')'
  175        | primary . '[' sub_script_expr ']'
  176        | primary . '[' sub_script_expr ',' sub_script_expr ']'
  177        | primary . '[' ']'
  178        | primary . '.' ID
  185        | primary . PLUSPLUS
  186        | primary . MOINSMOINS

    MOINSMOINS  shift, and go to state 126
    PLUSPLUS    shift, and go to state 127
    '^'         shift, and go to state 128
    '\''        shift, and go to state 129
    '_'         shift, and go to state 130
    '('         shift, and go to state 131
    '['         shift, and go to state 132
    '.'         shift, and go to state 133

    $default  reduce using rule 165 (pow_expr)


state 52

   96 instruction: IF '(' . Expr ')' instruction
   97            | IF '(' . Expr ')' instruction ELSE instruction

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 134
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 53

  187 primary: TYPE . '(' Expr ')'

    '('  shift, and go to state 69


state 54

  179 primary: FESPACE . '.' ID
  180        | FESPACE . '(' parameters ')'

    '('  shift, and go to state 74
    '.'  shift, and go to state 75


state 55

  181 primary: FESPACE1 . '.' ID
  182        | FESPACE1 . '(' parameters ')'

    '('  shift, and go to state 76
    '.'  shift, and go to state 77


state 56

  183 primary: FESPACE3 . '.' ID
  184        | FESPACE3 . '(' parameters ')'

    '('  shift, and go to state 78
    '.'  shift, and go to state 79


state 57

  108 Expr: Expr . ',' Expr
  188 primary: '(' Expr . ')'

    ','  shift, and go to state 95
    ')'  shift, and go to state 135


state 58

  161 array: no_comma_expr .

    $default  reduce using rule 161 (array)


state 59

  162 array: array . ',' no_comma_expr
  189 primary: '[' array . ']'

    ','  shift, and go to state 136
    ']'  shift, and go to state 137


state 60

   68 fespace_def: ID . '(' parameters_list ')'

    '('  shift, and go to state 138


state 61

   69 fespace_def_list: fespace_def .

    $default  reduce using rule 69 (fespace_def_list)


state 62

   70 fespace_def_list: fespace_def_list . ',' fespace_def
   73 declaration: FESPACEID fespace_def_list . ';'

    ','  shift, and go to state 139
    ';'  shift, and go to state 140


state 63

   88 instruction: INCLUDE STRING .

    $default  reduce using rule 88 (instruction)


state 64

   89 instruction: LOAD STRING .

    $default  reduce using rule 89 (instruction)


state 65

  101 instruction: BREAK ';' .

    $default  reduce using rule 101 (instruction)


state 66

  102 instruction: CONTINUE ';' .

    $default  reduce using rule 102 (instruction)


state 67

  103 instruction: RETURN Expr . ';'
  108 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ';'  shift, and go to state 141


state 68

   46 type_of_dcl: TYPE '<' . TYPE '>'
   47            | TYPE '<' . TYPE '>' '[' TYPE ']'
   48            | TYPE '<' . TYPE '>' '[' TYPE ',' TYPE ']'

    TYPE  shift, and go to state 142


state 69

  187 primary: TYPE '(' . Expr ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 143
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 70

   42 type_of_dcl: TYPE '[' . TYPE ']'
   43            | TYPE '[' . TYPE ']' '[' TYPE ']'
   44            | TYPE '[' . TYPE ',' TYPE ']'
   45            | TYPE '[' . TYPE ',' TYPE ']' '[' TYPE ']'

    TYPE  shift, and go to state 144


state 71

   75 declaration: FUNCTION ID . '=' Expr ';'
   79            | FUNCTION ID . '(' list_of_id_args ')' $@3 '=' no_comma_expr ';'

    '='  shift, and go to state 145
    '('  shift, and go to state 146


state 72

   41 type_of_dcl: TYPE .
   42            | TYPE . '[' TYPE ']'
   43            | TYPE . '[' TYPE ']' '[' TYPE ']'
   44            | TYPE . '[' TYPE ',' TYPE ']'
   45            | TYPE . '[' TYPE ',' TYPE ']' '[' TYPE ']'
   46            | TYPE . '<' TYPE '>'
   47            | TYPE . '<' TYPE '>' '[' TYPE ']'
   48            | TYPE . '<' TYPE '>' '[' TYPE ',' TYPE ']'

    '<'  shift, and go to state 68
    '['  shift, and go to state 70

    $default  reduce using rule 41 (type_of_dcl)


state 73

   77 declaration: FUNCTION type_of_dcl . ID '(' list_of_id_args ')' $@2 '{' instructions '}'

    ID  shift, and go to state 147


state 74

  180 primary: FESPACE '(' . parameters ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 148
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 149
    FESPACE1    shift, and go to state 150
    FESPACE3    shift, and go to state 151
    ':'         shift, and go to state 152

    $default  reduce using rule 150 (parameters)

    id               go to state 153
    unop             go to state 45
    no_ternary_expr  go to state 154
    sub_script_expr  go to state 155
    parameters       go to state 156
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 75

  179 primary: FESPACE '.' . ID

    ID  shift, and go to state 157


state 76

  182 primary: FESPACE1 '(' . parameters ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 148
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 149
    FESPACE1    shift, and go to state 150
    FESPACE3    shift, and go to state 151
    ':'         shift, and go to state 152

    $default  reduce using rule 150 (parameters)

    id               go to state 153
    unop             go to state 45
    no_ternary_expr  go to state 154
    sub_script_expr  go to state 155
    parameters       go to state 158
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 77

  181 primary: FESPACE1 '.' . ID

    ID  shift, and go to state 159


state 78

  184 primary: FESPACE3 '(' . parameters ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 148
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 149
    FESPACE1    shift, and go to state 150
    FESPACE3    shift, and go to state 151
    ':'         shift, and go to state 152

    $default  reduce using rule 150 (parameters)

    id               go to state 153
    unop             go to state 45
    no_ternary_expr  go to state 154
    sub_script_expr  go to state 155
    parameters       go to state 160
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 79

  183 primary: FESPACE3 '.' . ID

    ID  shift, and go to state 161


state 80

   99 instruction: BORDER ID . border_expr
  100            | BORDER ID . '[' array ']' ';'

    '('  shift, and go to state 162
    '['  shift, and go to state 163

    bornes       go to state 164
    border_expr  go to state 165


state 81

    0 $accept: start $end .

    $default  accept


state 82

    1 start: input ENDOFFILE .

    $default  reduce using rule 1 (start)


state 83

    4 instructions: instructions instruction .

    $default  reduce using rule 4 (instructions)


state 84

   72 declaration: type_of_dcl $@1 . list_of_dcls ';'

    ID  shift, and go to state 166

    list_of_dcls  go to state 167


state 85

   61 fespace: fespace123 '<' . TYPE '>'

    TYPE  shift, and go to state 168


state 86

   52 ID_space: '[' . list_of_id1 ']'
   53         | '[' . list_of_id1 ']' '[' no_set_expr ']'
   54         | '[' . list_of_id1 ']' '=' no_set_expr
   67 spaceIDs: fespace '[' . TYPE ']' spaceIDa

    ID        shift, and go to state 169
    TYPE      shift, and go to state 170
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    list_of_id1  go to state 174
    id           go to state 175


state 87

   49 ID_space: ID .
   50         | ID . '[' no_set_expr ']'
   51         | ID . '=' no_set_expr

    '='  shift, and go to state 176
    '['  shift, and go to state 177

    $default  reduce using rule 49 (ID_space)


state 88

   64 spaceIDb: ID_space .

    $default  reduce using rule 64 (spaceIDb)


state 89

   65 spaceIDb: spaceIDb . ',' ID_space
   66 spaceIDs: fespace spaceIDb .

    ','  shift, and go to state 178

    $default  reduce using rule 66 (spaceIDs)


state 90

   74 declaration: spaceIDs ';' .

    $default  reduce using rule 74 (declaration)


state 91

    4 instructions: instructions . instruction
   98 instruction: begin instructions . end

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30
    '}'         shift, and go to state 179

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    end              go to state 180
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 83
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 92

   93 instruction: for_loop '(' . Expr ';' Expr ';' Expr ')' instruction
   94            | for_loop '(' . declaration_for ';' Expr ';' Expr ')' instruction

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 23
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    type_of_dcl      go to state 181
    declaration_for  go to state 182
    Expr             go to state 183
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 93

   95 instruction: while_loop '(' . Expr ')' instruction

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 184
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 94

   90 instruction: try '{' . instructions '}' catchs

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    instructions     go to state 185
    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 43
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 95

  108 Expr: Expr ',' . Expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 186
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 96

   91 instruction: Expr ';' .

    $default  reduce using rule 91 (instruction)


state 97

  164 unary_expr: unop pow_expr .

    $default  reduce using rule 164 (unary_expr)


state 98

  115 no_comma_expr: no_set_expr '=' . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 187
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 99

  116 no_comma_expr: no_set_expr PLUSEQ . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 188
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 100

  117 no_comma_expr: no_set_expr MOINSEQ . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 189
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 101

  118 no_comma_expr: no_set_expr MULEQ . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 190
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 102

  119 no_comma_expr: no_set_expr DIVEQ . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 191
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 103

  120 no_comma_expr: no_set_expr DOTMULEQ . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 192
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 104

  121 no_comma_expr: no_set_expr DOTDIVEQ . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 193
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 105

  135 no_ternary_expr: no_ternary_expr GTGT . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 194
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 106

  134 no_ternary_expr: no_ternary_expr LTLT . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 195
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 107

  138 no_ternary_expr: no_ternary_expr '|' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 196
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 108

  139 no_ternary_expr: no_ternary_expr OR . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 197
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 109

  136 no_ternary_expr: no_ternary_expr '&' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 198
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 110

  137 no_ternary_expr: no_ternary_expr AND . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 199
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 111

  145 no_ternary_expr: no_ternary_expr NE . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 200
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 112

  144 no_ternary_expr: no_ternary_expr EQ . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 201
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 113

  140 no_ternary_expr: no_ternary_expr '<' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 202
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 114

  142 no_ternary_expr: no_ternary_expr '>' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 203
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 115

  143 no_ternary_expr: no_ternary_expr GE . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 204
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 116

  141 no_ternary_expr: no_ternary_expr LE . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 205
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 117

  132 no_ternary_expr: no_ternary_expr '+' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 206
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 118

  133 no_ternary_expr: no_ternary_expr '-' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 207
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 119

  127 no_ternary_expr: no_ternary_expr '*' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 208
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 120

  130 no_ternary_expr: no_ternary_expr '/' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 209
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 121

  131 no_ternary_expr: no_ternary_expr '%' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 210
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 122

  129 no_ternary_expr: no_ternary_expr DOTSLASH . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 211
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 123

  128 no_ternary_expr: no_ternary_expr DOTSTAR . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 212
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 124

  123 no_set_expr: no_ternary_expr '?' . no_ternary_expr ':' no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 213
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 125

  124 no_set_expr: no_ternary_expr ':' . no_ternary_expr
  125            | no_ternary_expr ':' . no_ternary_expr ':' no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 214
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 126

  186 primary: primary MOINSMOINS .

    $default  reduce using rule 186 (primary)


state 127

  185 primary: primary PLUSPLUS .

    $default  reduce using rule 185 (primary)


state 128

  166 pow_expr: primary '^' . unary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop        go to state 45
    unary_expr  go to state 215
    pow_expr    go to state 50
    primary     go to state 51


state 129

  168 pow_expr: primary '\'' .

    $default  reduce using rule 168 (pow_expr)


state 130

  167 pow_expr: primary '_' . unary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop        go to state 45
    unary_expr  go to state 216
    pow_expr    go to state 50
    primary     go to state 51


state 131

  174 primary: primary '(' . parameters ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 148
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 149
    FESPACE1    shift, and go to state 150
    FESPACE3    shift, and go to state 151
    ':'         shift, and go to state 152

    $default  reduce using rule 150 (parameters)

    id               go to state 153
    unop             go to state 45
    no_ternary_expr  go to state 154
    sub_script_expr  go to state 155
    parameters       go to state 217
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 132

  175 primary: primary '[' . sub_script_expr ']'
  176        | primary '[' . sub_script_expr ',' sub_script_expr ']'
  177        | primary '[' . ']'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    ']'         shift, and go to state 218
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56
    ':'         shift, and go to state 152

    unop             go to state 45
    no_ternary_expr  go to state 154
    sub_script_expr  go to state 219
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 133

  178 primary: primary '.' . ID

    ID  shift, and go to state 220


state 134

   96 instruction: IF '(' Expr . ')' instruction
   97            | IF '(' Expr . ')' instruction ELSE instruction
  108 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ')'  shift, and go to state 221


state 135

  188 primary: '(' Expr ')' .

    $default  reduce using rule 188 (primary)


state 136

  162 array: array ',' . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 222
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 137

  189 primary: '[' array ']' .

    $default  reduce using rule 189 (primary)


state 138

   68 fespace_def: ID '(' . parameters_list ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 223
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 224
    FESPACE1    shift, and go to state 225
    FESPACE3    shift, and go to state 226

    parameters_list  go to state 227
    unop             go to state 45
    no_set_expr      go to state 228
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 139

   70 fespace_def_list: fespace_def_list ',' . fespace_def

    ID  shift, and go to state 60

    fespace_def  go to state 229


state 140

   73 declaration: FESPACEID fespace_def_list ';' .

    $default  reduce using rule 73 (declaration)


state 141

  103 instruction: RETURN Expr ';' .

    $default  reduce using rule 103 (instruction)


state 142

   46 type_of_dcl: TYPE '<' TYPE . '>'
   47            | TYPE '<' TYPE . '>' '[' TYPE ']'
   48            | TYPE '<' TYPE . '>' '[' TYPE ',' TYPE ']'

    '>'  shift, and go to state 230


state 143

  108 Expr: Expr . ',' Expr
  187 primary: TYPE '(' Expr . ')'

    ','  shift, and go to state 95
    ')'  shift, and go to state 231


state 144

   42 type_of_dcl: TYPE '[' TYPE . ']'
   43            | TYPE '[' TYPE . ']' '[' TYPE ']'
   44            | TYPE '[' TYPE . ',' TYPE ']'
   45            | TYPE '[' TYPE . ',' TYPE ']' '[' TYPE ']'

    ','  shift, and go to state 232
    ']'  shift, and go to state 233


state 145

   75 declaration: FUNCTION ID '=' . Expr ';'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 234
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 146

   79 declaration: FUNCTION ID '(' . list_of_id_args ')' $@3 '=' no_comma_expr ';'

    '['       shift, and go to state 235
    ID        shift, and go to state 169
    TYPE      shift, and go to state 72
    FESPACE   shift, and go to state 236
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 237

    $default  reduce using rule 5 (list_of_id_args)

    list_of_id_args  go to state 238
    id               go to state 239
    type_of_dcl      go to state 240


state 147

   77 declaration: FUNCTION type_of_dcl ID . '(' list_of_id_args ')' $@2 '{' instructions '}'

    '('  shift, and go to state 241


state 148

   26 id: ID .
  169 primary: ID .

    '='       reduce using rule 26 (id)
    $default  reduce using rule 169 (primary)


state 149

   27 id: FESPACE .
  151 parameters: FESPACE .
  179 primary: FESPACE . '.' ID
  180        | FESPACE . '(' parameters ')'

    '('  shift, and go to state 74
    '.'  shift, and go to state 75

    '='       reduce using rule 27 (id)
    $default  reduce using rule 151 (parameters)


state 150

   29 id: FESPACE1 .
  152 parameters: FESPACE1 .
  181 primary: FESPACE1 . '.' ID
  182        | FESPACE1 . '(' parameters ')'

    '('  shift, and go to state 76
    '.'  shift, and go to state 77

    '='       reduce using rule 29 (id)
    $default  reduce using rule 152 (parameters)


state 151

   28 id: FESPACE3 .
  153 parameters: FESPACE3 .
  183 primary: FESPACE3 . '.' ID
  184        | FESPACE3 . '(' parameters ')'

    '('  shift, and go to state 78
    '.'  shift, and go to state 79

    '='       reduce using rule 28 (id)
    $default  reduce using rule 153 (parameters)


state 152

  147 sub_script_expr: ':' .

    $default  reduce using rule 147 (sub_script_expr)


state 153

  154 parameters: id . '=' no_set_expr

    '='  shift, and go to state 242


state 154

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr
  146 sub_script_expr: no_ternary_expr .
  148                | no_ternary_expr . ':' no_ternary_expr
  149                | no_ternary_expr . ':' no_ternary_expr ':' no_ternary_expr

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123
    ':'       shift, and go to state 243

    $default  reduce using rule 146 (sub_script_expr)


state 155

  155 parameters: sub_script_expr .

    $default  reduce using rule 155 (parameters)


state 156

  156 parameters: parameters . ',' FESPACE
  157           | parameters . ',' FESPACE1
  158           | parameters . ',' FESPACE3
  159           | parameters . ',' sub_script_expr
  160           | parameters . ',' id '=' no_set_expr
  180 primary: FESPACE '(' parameters . ')'

    ','  shift, and go to state 244
    ')'  shift, and go to state 245


state 157

  179 primary: FESPACE '.' ID .

    $default  reduce using rule 179 (primary)


state 158

  156 parameters: parameters . ',' FESPACE
  157           | parameters . ',' FESPACE1
  158           | parameters . ',' FESPACE3
  159           | parameters . ',' sub_script_expr
  160           | parameters . ',' id '=' no_set_expr
  182 primary: FESPACE1 '(' parameters . ')'

    ','  shift, and go to state 244
    ')'  shift, and go to state 246


state 159

  181 primary: FESPACE1 '.' ID .

    $default  reduce using rule 181 (primary)


state 160

  156 parameters: parameters . ',' FESPACE
  157           | parameters . ',' FESPACE1
  158           | parameters . ',' FESPACE3
  159           | parameters . ',' sub_script_expr
  160           | parameters . ',' id '=' no_set_expr
  184 primary: FESPACE3 '(' parameters . ')'

    ','  shift, and go to state 244
    ')'  shift, and go to state 247


state 161

  183 primary: FESPACE3 '.' ID .

    $default  reduce using rule 183 (primary)


state 162

  105 bornes: '(' . ID '=' Expr ',' Expr ')'

    ID  shift, and go to state 248


state 163

  100 instruction: BORDER ID '[' . array ']' ';'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 58
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    array            go to state 249
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 164

  106 border_expr: bornes . instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 250
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 165

   99 instruction: BORDER ID border_expr .

    $default  reduce using rule 99 (instruction)


state 166

   30 list_of_dcls: ID .
   31             | ID . '=' no_comma_expr
   32             | ID . '(' parameters_list ')'

    '='  shift, and go to state 251
    '('  shift, and go to state 252

    $default  reduce using rule 30 (list_of_dcls)


state 167

   33 list_of_dcls: list_of_dcls . ',' list_of_dcls
   72 declaration: type_of_dcl $@1 list_of_dcls . ';'

    ','  shift, and go to state 253
    ';'  shift, and go to state 254


state 168

   61 fespace: fespace123 '<' TYPE . '>'

    '>'  shift, and go to state 255


state 169

   26 id: ID .

    $default  reduce using rule 26 (id)


state 170

   67 spaceIDs: fespace '[' TYPE . ']' spaceIDa

    ']'  shift, and go to state 256


state 171

   27 id: FESPACE .

    $default  reduce using rule 27 (id)


state 172

   29 id: FESPACE1 .

    $default  reduce using rule 29 (id)


state 173

   28 id: FESPACE3 .

    $default  reduce using rule 28 (id)


state 174

   25 list_of_id1: list_of_id1 . ',' id
   52 ID_space: '[' list_of_id1 . ']'
   53         | '[' list_of_id1 . ']' '[' no_set_expr ']'
   54         | '[' list_of_id1 . ']' '=' no_set_expr

    ','  shift, and go to state 257
    ']'  shift, and go to state 258


state 175

   24 list_of_id1: id .

    $default  reduce using rule 24 (list_of_id1)


state 176

   51 ID_space: ID '=' . no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 259
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 177

   50 ID_space: ID '[' . no_set_expr ']'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 260
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 178

   65 spaceIDb: spaceIDb ',' . ID_space

    '['  shift, and go to state 261
    ID   shift, and go to state 87

    ID_space  go to state 262


state 179

   81 end: '}' .

    $default  reduce using rule 81 (end)


state 180

   98 instruction: begin instructions end .

    $default  reduce using rule 98 (instruction)


state 181

   85 declaration_for: type_of_dcl . $@4 list_of_dcls

    $default  reduce using rule 84 ($@4)

    $@4  go to state 263


state 182

   94 instruction: for_loop '(' declaration_for . ';' Expr ';' Expr ')' instruction

    ';'  shift, and go to state 264


state 183

   93 instruction: for_loop '(' Expr . ';' Expr ';' Expr ')' instruction
  108 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ';'  shift, and go to state 265


state 184

   95 instruction: while_loop '(' Expr . ')' instruction
  108 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ')'  shift, and go to state 266


state 185

    4 instructions: instructions . instruction
   90 instruction: try '{' instructions . '}' catchs

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30
    '}'         shift, and go to state 267

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 83
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 186

  108 Expr: Expr . ',' Expr
  108     | Expr ',' Expr .

    $default  reduce using rule 108 (Expr)


state 187

  115 no_comma_expr: no_set_expr '=' no_comma_expr .

    $default  reduce using rule 115 (no_comma_expr)


state 188

  116 no_comma_expr: no_set_expr PLUSEQ no_comma_expr .

    $default  reduce using rule 116 (no_comma_expr)


state 189

  117 no_comma_expr: no_set_expr MOINSEQ no_comma_expr .

    $default  reduce using rule 117 (no_comma_expr)


state 190

  118 no_comma_expr: no_set_expr MULEQ no_comma_expr .

    $default  reduce using rule 118 (no_comma_expr)


state 191

  119 no_comma_expr: no_set_expr DIVEQ no_comma_expr .

    $default  reduce using rule 119 (no_comma_expr)


state 192

  120 no_comma_expr: no_set_expr DOTMULEQ no_comma_expr .

    $default  reduce using rule 120 (no_comma_expr)


state 193

  121 no_comma_expr: no_set_expr DOTDIVEQ no_comma_expr .

    $default  reduce using rule 121 (no_comma_expr)


state 194

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  135                | no_ternary_expr GTGT no_ternary_expr .
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 135 (no_ternary_expr)


state 195

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  134                | no_ternary_expr LTLT no_ternary_expr .
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 134 (no_ternary_expr)


state 196

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  138                | no_ternary_expr '|' no_ternary_expr .
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 138 (no_ternary_expr)


state 197

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  139                | no_ternary_expr OR no_ternary_expr .
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 139 (no_ternary_expr)


state 198

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  136                | no_ternary_expr '&' no_ternary_expr .
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 136 (no_ternary_expr)


state 199

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  137                | no_ternary_expr AND no_ternary_expr .
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 137 (no_ternary_expr)


state 200

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr
  145                | no_ternary_expr NE no_ternary_expr .

    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 145 (no_ternary_expr)


state 201

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  144                | no_ternary_expr EQ no_ternary_expr .
  145                | no_ternary_expr . NE no_ternary_expr

    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 144 (no_ternary_expr)


state 202

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  140                | no_ternary_expr '<' no_ternary_expr .
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 140 (no_ternary_expr)


state 203

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  142                | no_ternary_expr '>' no_ternary_expr .
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 142 (no_ternary_expr)


state 204

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  143                | no_ternary_expr GE no_ternary_expr .
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 143 (no_ternary_expr)


state 205

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  141                | no_ternary_expr LE no_ternary_expr .
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 141 (no_ternary_expr)


state 206

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  132                | no_ternary_expr '+' no_ternary_expr .
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 132 (no_ternary_expr)


state 207

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  133                | no_ternary_expr '-' no_ternary_expr .
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 133 (no_ternary_expr)


state 208

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  127                | no_ternary_expr '*' no_ternary_expr .
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    $default  reduce using rule 127 (no_ternary_expr)


state 209

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  130                | no_ternary_expr '/' no_ternary_expr .
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    $default  reduce using rule 130 (no_ternary_expr)


state 210

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  131                | no_ternary_expr '%' no_ternary_expr .
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    $default  reduce using rule 131 (no_ternary_expr)


state 211

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  129                | no_ternary_expr DOTSLASH no_ternary_expr .
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    $default  reduce using rule 129 (no_ternary_expr)


state 212

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  128                | no_ternary_expr DOTSTAR no_ternary_expr .
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    $default  reduce using rule 128 (no_ternary_expr)


state 213

  123 no_set_expr: no_ternary_expr '?' no_ternary_expr . ':' no_ternary_expr
  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123
    ':'       shift, and go to state 268


state 214

  124 no_set_expr: no_ternary_expr ':' no_ternary_expr .
  125            | no_ternary_expr ':' no_ternary_expr . ':' no_ternary_expr
  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123
    ':'       shift, and go to state 269

    $default  reduce using rule 124 (no_set_expr)


state 215

  166 pow_expr: primary '^' unary_expr .

    $default  reduce using rule 166 (pow_expr)


state 216

  167 pow_expr: primary '_' unary_expr .

    $default  reduce using rule 167 (pow_expr)


state 217

  156 parameters: parameters . ',' FESPACE
  157           | parameters . ',' FESPACE1
  158           | parameters . ',' FESPACE3
  159           | parameters . ',' sub_script_expr
  160           | parameters . ',' id '=' no_set_expr
  174 primary: primary '(' parameters . ')'

    ','  shift, and go to state 244
    ')'  shift, and go to state 270


state 218

  177 primary: primary '[' ']' .

    $default  reduce using rule 177 (primary)


state 219

  175 primary: primary '[' sub_script_expr . ']'
  176        | primary '[' sub_script_expr . ',' sub_script_expr ']'

    ','  shift, and go to state 271
    ']'  shift, and go to state 272


state 220

  178 primary: primary '.' ID .

    $default  reduce using rule 178 (primary)


state 221

   96 instruction: IF '(' Expr ')' . instruction
   97            | IF '(' Expr ')' . instruction ELSE instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 273
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 222

  162 array: array ',' no_comma_expr .

    $default  reduce using rule 162 (array)


state 223

   38 parameters_list: ID . '=' no_set_expr
  169 primary: ID .

    '='  shift, and go to state 274

    $default  reduce using rule 169 (primary)


state 224

   35 parameters_list: FESPACE . ID
  179 primary: FESPACE . '.' ID
  180        | FESPACE . '(' parameters ')'

    '('  shift, and go to state 74
    '.'  shift, and go to state 75
    ID   shift, and go to state 275


state 225

   36 parameters_list: FESPACE1 . ID
  181 primary: FESPACE1 . '.' ID
  182        | FESPACE1 . '(' parameters ')'

    '('  shift, and go to state 76
    '.'  shift, and go to state 77
    ID   shift, and go to state 276


state 226

   37 parameters_list: FESPACE3 . ID
  183 primary: FESPACE3 . '.' ID
  184        | FESPACE3 . '(' parameters ')'

    '('  shift, and go to state 78
    '.'  shift, and go to state 79
    ID   shift, and go to state 277


state 227

   39 parameters_list: parameters_list . ',' no_set_expr
   40                | parameters_list . ',' id '=' no_set_expr
   68 fespace_def: ID '(' parameters_list . ')'

    ','  shift, and go to state 278
    ')'  shift, and go to state 279


state 228

   34 parameters_list: no_set_expr .

    $default  reduce using rule 34 (parameters_list)


state 229

   70 fespace_def_list: fespace_def_list ',' fespace_def .

    $default  reduce using rule 70 (fespace_def_list)


state 230

   46 type_of_dcl: TYPE '<' TYPE '>' .
   47            | TYPE '<' TYPE '>' . '[' TYPE ']'
   48            | TYPE '<' TYPE '>' . '[' TYPE ',' TYPE ']'

    '['  shift, and go to state 280

    $default  reduce using rule 46 (type_of_dcl)


state 231

  187 primary: TYPE '(' Expr ')' .

    $default  reduce using rule 187 (primary)


state 232

   44 type_of_dcl: TYPE '[' TYPE ',' . TYPE ']'
   45            | TYPE '[' TYPE ',' . TYPE ']' '[' TYPE ']'

    TYPE  shift, and go to state 281


state 233

   42 type_of_dcl: TYPE '[' TYPE ']' .
   43            | TYPE '[' TYPE ']' . '[' TYPE ']'

    '['  shift, and go to state 282

    $default  reduce using rule 42 (type_of_dcl)


state 234

   75 declaration: FUNCTION ID '=' Expr . ';'
  108 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ';'  shift, and go to state 283


state 235

   14 list_of_id_args: '[' . list_of_id_args ']'

    '['       shift, and go to state 235
    ID        shift, and go to state 169
    TYPE      shift, and go to state 72
    FESPACE   shift, and go to state 236
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 237

    $default  reduce using rule 5 (list_of_id_args)

    list_of_id_args  go to state 284
    id               go to state 239
    type_of_dcl      go to state 240


state 236

    8 list_of_id_args: FESPACE . id
    9                | FESPACE . '&' id
   27 id: FESPACE .

    '&'       shift, and go to state 285
    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    $default  reduce using rule 27 (id)

    id  go to state 286


state 237

   10 list_of_id_args: FESPACE3 . id
   11                | FESPACE3 . '&' id
   28 id: FESPACE3 .

    '&'       shift, and go to state 287
    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    $default  reduce using rule 28 (id)

    id  go to state 288


state 238

   15 list_of_id_args: list_of_id_args . ',' id
   16                | list_of_id_args . ',' '[' list_of_id_args ']'
   17                | list_of_id_args . ',' id '=' no_comma_expr
   18                | list_of_id_args . ',' FESPACE id
   19                | list_of_id_args . ',' FESPACE '&' id
   20                | list_of_id_args . ',' FESPACE3 id
   21                | list_of_id_args . ',' FESPACE3 '&' id
   22                | list_of_id_args . ',' type_of_dcl id
   23                | list_of_id_args . ',' type_of_dcl '&' id
   79 declaration: FUNCTION ID '(' list_of_id_args . ')' $@3 '=' no_comma_expr ';'

    ','  shift, and go to state 289
    ')'  shift, and go to state 290


state 239

    6 list_of_id_args: id .
    7                | id . '=' no_comma_expr

    '='  shift, and go to state 291

    $default  reduce using rule 6 (list_of_id_args)


state 240

   12 list_of_id_args: type_of_dcl . id
   13                | type_of_dcl . '&' id

    '&'       shift, and go to state 292
    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 293


state 241

   77 declaration: FUNCTION type_of_dcl ID '(' . list_of_id_args ')' $@2 '{' instructions '}'

    '['       shift, and go to state 235
    ID        shift, and go to state 169
    TYPE      shift, and go to state 72
    FESPACE   shift, and go to state 236
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 237

    $default  reduce using rule 5 (list_of_id_args)

    list_of_id_args  go to state 294
    id               go to state 239
    type_of_dcl      go to state 240


state 242

  154 parameters: id '=' . no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 295
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 243

  148 sub_script_expr: no_ternary_expr ':' . no_ternary_expr
  149                | no_ternary_expr ':' . no_ternary_expr ':' no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 296
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 244

  156 parameters: parameters ',' . FESPACE
  157           | parameters ',' . FESPACE1
  158           | parameters ',' . FESPACE3
  159           | parameters ',' . sub_script_expr
  160           | parameters ',' . id '=' no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 148
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 297
    FESPACE1    shift, and go to state 298
    FESPACE3    shift, and go to state 299
    ':'         shift, and go to state 152

    id               go to state 300
    unop             go to state 45
    no_ternary_expr  go to state 154
    sub_script_expr  go to state 301
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 245

  180 primary: FESPACE '(' parameters ')' .

    $default  reduce using rule 180 (primary)


state 246

  182 primary: FESPACE1 '(' parameters ')' .

    $default  reduce using rule 182 (primary)


state 247

  184 primary: FESPACE3 '(' parameters ')' .

    $default  reduce using rule 184 (primary)


state 248

  105 bornes: '(' ID . '=' Expr ',' Expr ')'

    '='  shift, and go to state 302


state 249

  100 instruction: BORDER ID '[' array . ']' ';'
  162 array: array . ',' no_comma_expr

    ','  shift, and go to state 136
    ']'  shift, and go to state 303


state 250

  106 border_expr: bornes instruction .

    $default  reduce using rule 106 (border_expr)


state 251

   31 list_of_dcls: ID '=' . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 304
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 252

   32 list_of_dcls: ID '(' . parameters_list ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 223
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 224
    FESPACE1    shift, and go to state 225
    FESPACE3    shift, and go to state 226

    parameters_list  go to state 305
    unop             go to state 45
    no_set_expr      go to state 228
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 253

   33 list_of_dcls: list_of_dcls ',' . list_of_dcls

    ID  shift, and go to state 166

    list_of_dcls  go to state 306


state 254

   72 declaration: type_of_dcl $@1 list_of_dcls ';' .

    $default  reduce using rule 72 (declaration)


state 255

   61 fespace: fespace123 '<' TYPE '>' .

    $default  reduce using rule 61 (fespace)


state 256

   67 spaceIDs: fespace '[' TYPE ']' . spaceIDa

    '['  shift, and go to state 307
    ID   shift, and go to state 308

    ID_array_space  go to state 309
    spaceIDa        go to state 310


state 257

   25 list_of_id1: list_of_id1 ',' . id

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 311


state 258

   52 ID_space: '[' list_of_id1 ']' .
   53         | '[' list_of_id1 ']' . '[' no_set_expr ']'
   54         | '[' list_of_id1 ']' . '=' no_set_expr

    '='  shift, and go to state 312
    '['  shift, and go to state 313

    $default  reduce using rule 52 (ID_space)


state 259

   51 ID_space: ID '=' no_set_expr .

    $default  reduce using rule 51 (ID_space)


state 260

   50 ID_space: ID '[' no_set_expr . ']'

    ']'  shift, and go to state 314


state 261

   52 ID_space: '[' . list_of_id1 ']'
   53         | '[' . list_of_id1 ']' '[' no_set_expr ']'
   54         | '[' . list_of_id1 ']' '=' no_set_expr

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    list_of_id1  go to state 174
    id           go to state 175


state 262

   65 spaceIDb: spaceIDb ',' ID_space .

    $default  reduce using rule 65 (spaceIDb)


state 263

   85 declaration_for: type_of_dcl $@4 . list_of_dcls

    ID  shift, and go to state 166

    list_of_dcls  go to state 315


state 264

   94 instruction: for_loop '(' declaration_for ';' . Expr ';' Expr ')' instruction

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 316
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 265

   93 instruction: for_loop '(' Expr ';' . Expr ';' Expr ')' instruction

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 317
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 266

   95 instruction: while_loop '(' Expr ')' . instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 318
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 267

   90 instruction: try '{' instructions '}' . catchs

    CATCH  shift, and go to state 319

    catchs  go to state 320


state 268

  123 no_set_expr: no_ternary_expr '?' no_ternary_expr ':' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 321
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 269

  125 no_set_expr: no_ternary_expr ':' no_ternary_expr ':' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 322
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 270

  174 primary: primary '(' parameters ')' .

    $default  reduce using rule 174 (primary)


state 271

  176 primary: primary '[' sub_script_expr ',' . sub_script_expr ']'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56
    ':'         shift, and go to state 152

    unop             go to state 45
    no_ternary_expr  go to state 154
    sub_script_expr  go to state 323
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 272

  175 primary: primary '[' sub_script_expr ']' .

    $default  reduce using rule 175 (primary)


state 273

   96 instruction: IF '(' Expr ')' instruction .
   97            | IF '(' Expr ')' instruction . ELSE instruction

    ELSE  shift, and go to state 324

    ELSE      [reduce using rule 96 (instruction)]
    $default  reduce using rule 96 (instruction)


state 274

   38 parameters_list: ID '=' . no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 325
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 275

   35 parameters_list: FESPACE ID .

    $default  reduce using rule 35 (parameters_list)


state 276

   36 parameters_list: FESPACE1 ID .

    $default  reduce using rule 36 (parameters_list)


state 277

   37 parameters_list: FESPACE3 ID .

    $default  reduce using rule 37 (parameters_list)


state 278

   39 parameters_list: parameters_list ',' . no_set_expr
   40                | parameters_list ',' . id '=' no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 148
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 326
    FESPACE1    shift, and go to state 327
    FESPACE3    shift, and go to state 328

    id               go to state 329
    unop             go to state 45
    no_set_expr      go to state 330
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 279

   68 fespace_def: ID '(' parameters_list ')' .

    $default  reduce using rule 68 (fespace_def)


state 280

   47 type_of_dcl: TYPE '<' TYPE '>' '[' . TYPE ']'
   48            | TYPE '<' TYPE '>' '[' . TYPE ',' TYPE ']'

    TYPE  shift, and go to state 331


state 281

   44 type_of_dcl: TYPE '[' TYPE ',' TYPE . ']'
   45            | TYPE '[' TYPE ',' TYPE . ']' '[' TYPE ']'

    ']'  shift, and go to state 332


state 282

   43 type_of_dcl: TYPE '[' TYPE ']' '[' . TYPE ']'

    TYPE  shift, and go to state 333


state 283

   75 declaration: FUNCTION ID '=' Expr ';' .

    $default  reduce using rule 75 (declaration)


state 284

   14 list_of_id_args: '[' list_of_id_args . ']'
   15                | list_of_id_args . ',' id
   16                | list_of_id_args . ',' '[' list_of_id_args ']'
   17                | list_of_id_args . ',' id '=' no_comma_expr
   18                | list_of_id_args . ',' FESPACE id
   19                | list_of_id_args . ',' FESPACE '&' id
   20                | list_of_id_args . ',' FESPACE3 id
   21                | list_of_id_args . ',' FESPACE3 '&' id
   22                | list_of_id_args . ',' type_of_dcl id
   23                | list_of_id_args . ',' type_of_dcl '&' id

    ','  shift, and go to state 289
    ']'  shift, and go to state 334


state 285

    9 list_of_id_args: FESPACE '&' . id

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 335


state 286

    8 list_of_id_args: FESPACE id .

    $default  reduce using rule 8 (list_of_id_args)


state 287

   11 list_of_id_args: FESPACE3 '&' . id

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 336


state 288

   10 list_of_id_args: FESPACE3 id .

    $default  reduce using rule 10 (list_of_id_args)


state 289

   15 list_of_id_args: list_of_id_args ',' . id
   16                | list_of_id_args ',' . '[' list_of_id_args ']'
   17                | list_of_id_args ',' . id '=' no_comma_expr
   18                | list_of_id_args ',' . FESPACE id
   19                | list_of_id_args ',' . FESPACE '&' id
   20                | list_of_id_args ',' . FESPACE3 id
   21                | list_of_id_args ',' . FESPACE3 '&' id
   22                | list_of_id_args ',' . type_of_dcl id
   23                | list_of_id_args ',' . type_of_dcl '&' id

    '['       shift, and go to state 337
    ID        shift, and go to state 169
    TYPE      shift, and go to state 72
    FESPACE   shift, and go to state 338
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 339

    id           go to state 340
    type_of_dcl  go to state 341


state 290

   79 declaration: FUNCTION ID '(' list_of_id_args ')' . $@3 '=' no_comma_expr ';'

    $default  reduce using rule 78 ($@3)

    $@3  go to state 342


state 291

    7 list_of_id_args: id '=' . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 343
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 292

   13 list_of_id_args: type_of_dcl '&' . id

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 344


state 293

   12 list_of_id_args: type_of_dcl id .

    $default  reduce using rule 12 (list_of_id_args)


state 294

   15 list_of_id_args: list_of_id_args . ',' id
   16                | list_of_id_args . ',' '[' list_of_id_args ']'
   17                | list_of_id_args . ',' id '=' no_comma_expr
   18                | list_of_id_args . ',' FESPACE id
   19                | list_of_id_args . ',' FESPACE '&' id
   20                | list_of_id_args . ',' FESPACE3 id
   21                | list_of_id_args . ',' FESPACE3 '&' id
   22                | list_of_id_args . ',' type_of_dcl id
   23                | list_of_id_args . ',' type_of_dcl '&' id
   77 declaration: FUNCTION type_of_dcl ID '(' list_of_id_args . ')' $@2 '{' instructions '}'

    ','  shift, and go to state 289
    ')'  shift, and go to state 345


state 295

  154 parameters: id '=' no_set_expr .

    $default  reduce using rule 154 (parameters)


state 296

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr
  148 sub_script_expr: no_ternary_expr ':' no_ternary_expr .
  149                | no_ternary_expr ':' no_ternary_expr . ':' no_ternary_expr

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123
    ':'       shift, and go to state 346

    $default  reduce using rule 148 (sub_script_expr)


state 297

   27 id: FESPACE .
  156 parameters: parameters ',' FESPACE .
  179 primary: FESPACE . '.' ID
  180        | FESPACE . '(' parameters ')'

    '('  shift, and go to state 74
    '.'  shift, and go to state 75

    '='       reduce using rule 27 (id)
    $default  reduce using rule 156 (parameters)


state 298

   29 id: FESPACE1 .
  157 parameters: parameters ',' FESPACE1 .
  181 primary: FESPACE1 . '.' ID
  182        | FESPACE1 . '(' parameters ')'

    '('  shift, and go to state 76
    '.'  shift, and go to state 77

    '='       reduce using rule 29 (id)
    $default  reduce using rule 157 (parameters)


state 299

   28 id: FESPACE3 .
  158 parameters: parameters ',' FESPACE3 .
  183 primary: FESPACE3 . '.' ID
  184        | FESPACE3 . '(' parameters ')'

    '('  shift, and go to state 78
    '.'  shift, and go to state 79

    '='       reduce using rule 28 (id)
    $default  reduce using rule 158 (parameters)


state 300

  160 parameters: parameters ',' id . '=' no_set_expr

    '='  shift, and go to state 347


state 301

  159 parameters: parameters ',' sub_script_expr .

    $default  reduce using rule 159 (parameters)


state 302

  105 bornes: '(' ID '=' . Expr ',' Expr ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 348
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 303

  100 instruction: BORDER ID '[' array ']' . ';'

    ';'  shift, and go to state 349


state 304

   31 list_of_dcls: ID '=' no_comma_expr .

    $default  reduce using rule 31 (list_of_dcls)


state 305

   32 list_of_dcls: ID '(' parameters_list . ')'
   39 parameters_list: parameters_list . ',' no_set_expr
   40                | parameters_list . ',' id '=' no_set_expr

    ','  shift, and go to state 278
    ')'  shift, and go to state 350


state 306

   33 list_of_dcls: list_of_dcls . ',' list_of_dcls
   33             | list_of_dcls ',' list_of_dcls .

    $default  reduce using rule 33 (list_of_dcls)


state 307

   56 ID_array_space: '[' . list_of_id1 ']' '(' no_set_expr ')'

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    list_of_id1  go to state 351
    id           go to state 175


state 308

   55 ID_array_space: ID . '(' no_set_expr ')'

    '('  shift, and go to state 352


state 309

   62 spaceIDa: ID_array_space .

    $default  reduce using rule 62 (spaceIDa)


state 310

   63 spaceIDa: spaceIDa . ',' ID_array_space
   67 spaceIDs: fespace '[' TYPE ']' spaceIDa .

    ','  shift, and go to state 353

    $default  reduce using rule 67 (spaceIDs)


state 311

   25 list_of_id1: list_of_id1 ',' id .

    $default  reduce using rule 25 (list_of_id1)


state 312

   54 ID_space: '[' list_of_id1 ']' '=' . no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 354
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 313

   53 ID_space: '[' list_of_id1 ']' '[' . no_set_expr ']'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 355
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 314

   50 ID_space: ID '[' no_set_expr ']' .

    $default  reduce using rule 50 (ID_space)


state 315

   33 list_of_dcls: list_of_dcls . ',' list_of_dcls
   85 declaration_for: type_of_dcl $@4 list_of_dcls .

    ','  shift, and go to state 253

    $default  reduce using rule 85 (declaration_for)


state 316

   94 instruction: for_loop '(' declaration_for ';' Expr . ';' Expr ')' instruction
  108 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ';'  shift, and go to state 356


state 317

   93 instruction: for_loop '(' Expr ';' Expr . ';' Expr ')' instruction
  108 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ';'  shift, and go to state 357


state 318

   95 instruction: while_loop '(' Expr ')' instruction .

    $default  reduce using rule 95 (instruction)


state 319

  104 catchs: CATCH . '(' '.' '.' '.' ')' instruction

    '('  shift, and go to state 358


state 320

   90 instruction: try '{' instructions '}' catchs .

    $default  reduce using rule 90 (instruction)


state 321

  123 no_set_expr: no_ternary_expr '?' no_ternary_expr ':' no_ternary_expr .
  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 123 (no_set_expr)


state 322

  125 no_set_expr: no_ternary_expr ':' no_ternary_expr ':' no_ternary_expr .
  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 125 (no_set_expr)


state 323

  176 primary: primary '[' sub_script_expr ',' sub_script_expr . ']'

    ']'  shift, and go to state 359


state 324

   97 instruction: IF '(' Expr ')' instruction ELSE . instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 360
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 325

   38 parameters_list: ID '=' no_set_expr .

    $default  reduce using rule 38 (parameters_list)


state 326

   27 id: FESPACE .
  179 primary: FESPACE . '.' ID
  180        | FESPACE . '(' parameters ')'

    '('  shift, and go to state 74
    '.'  shift, and go to state 75

    $default  reduce using rule 27 (id)


state 327

   29 id: FESPACE1 .
  181 primary: FESPACE1 . '.' ID
  182        | FESPACE1 . '(' parameters ')'

    '('  shift, and go to state 76
    '.'  shift, and go to state 77

    $default  reduce using rule 29 (id)


state 328

   28 id: FESPACE3 .
  183 primary: FESPACE3 . '.' ID
  184        | FESPACE3 . '(' parameters ')'

    '('  shift, and go to state 78
    '.'  shift, and go to state 79

    $default  reduce using rule 28 (id)


state 329

   40 parameters_list: parameters_list ',' id . '=' no_set_expr

    '='  shift, and go to state 361


state 330

   39 parameters_list: parameters_list ',' no_set_expr .

    $default  reduce using rule 39 (parameters_list)


state 331

   47 type_of_dcl: TYPE '<' TYPE '>' '[' TYPE . ']'
   48            | TYPE '<' TYPE '>' '[' TYPE . ',' TYPE ']'

    ','  shift, and go to state 362
    ']'  shift, and go to state 363


state 332

   44 type_of_dcl: TYPE '[' TYPE ',' TYPE ']' .
   45            | TYPE '[' TYPE ',' TYPE ']' . '[' TYPE ']'

    '['  shift, and go to state 364

    $default  reduce using rule 44 (type_of_dcl)


state 333

   43 type_of_dcl: TYPE '[' TYPE ']' '[' TYPE . ']'

    ']'  shift, and go to state 365


state 334

   14 list_of_id_args: '[' list_of_id_args ']' .

    $default  reduce using rule 14 (list_of_id_args)


state 335

    9 list_of_id_args: FESPACE '&' id .

    $default  reduce using rule 9 (list_of_id_args)


state 336

   11 list_of_id_args: FESPACE3 '&' id .

    $default  reduce using rule 11 (list_of_id_args)


state 337

   16 list_of_id_args: list_of_id_args ',' '[' . list_of_id_args ']'

    '['       shift, and go to state 235
    ID        shift, and go to state 169
    TYPE      shift, and go to state 72
    FESPACE   shift, and go to state 236
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 237

    $default  reduce using rule 5 (list_of_id_args)

    list_of_id_args  go to state 366
    id               go to state 239
    type_of_dcl      go to state 240


state 338

   18 list_of_id_args: list_of_id_args ',' FESPACE . id
   19                | list_of_id_args ',' FESPACE . '&' id
   27 id: FESPACE .

    '&'       shift, and go to state 367
    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    $default  reduce using rule 27 (id)

    id  go to state 368


state 339

   20 list_of_id_args: list_of_id_args ',' FESPACE3 . id
   21                | list_of_id_args ',' FESPACE3 . '&' id
   28 id: FESPACE3 .

    '&'       shift, and go to state 369
    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    $default  reduce using rule 28 (id)

    id  go to state 370


state 340

   15 list_of_id_args: list_of_id_args ',' id .
   17                | list_of_id_args ',' id . '=' no_comma_expr

    '='  shift, and go to state 371

    $default  reduce using rule 15 (list_of_id_args)


state 341

   22 list_of_id_args: list_of_id_args ',' type_of_dcl . id
   23                | list_of_id_args ',' type_of_dcl . '&' id

    '&'       shift, and go to state 372
    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 373


state 342

   79 declaration: FUNCTION ID '(' list_of_id_args ')' $@3 . '=' no_comma_expr ';'

    '='  shift, and go to state 374


state 343

    7 list_of_id_args: id '=' no_comma_expr .

    $default  reduce using rule 7 (list_of_id_args)


state 344

   13 list_of_id_args: type_of_dcl '&' id .

    $default  reduce using rule 13 (list_of_id_args)


state 345

   77 declaration: FUNCTION type_of_dcl ID '(' list_of_id_args ')' . $@2 '{' instructions '}'

    $default  reduce using rule 76 ($@2)

    $@2  go to state 375


state 346

  149 sub_script_expr: no_ternary_expr ':' no_ternary_expr ':' . no_ternary_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_ternary_expr  go to state 376
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 347

  160 parameters: parameters ',' id '=' . no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 377
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 348

  105 bornes: '(' ID '=' Expr . ',' Expr ')'
  108 Expr: Expr . ',' Expr

    ','  shift, and go to state 378


state 349

  100 instruction: BORDER ID '[' array ']' ';' .

    $default  reduce using rule 100 (instruction)


state 350

   32 list_of_dcls: ID '(' parameters_list ')' .

    $default  reduce using rule 32 (list_of_dcls)


state 351

   25 list_of_id1: list_of_id1 . ',' id
   56 ID_array_space: '[' list_of_id1 . ']' '(' no_set_expr ')'

    ','  shift, and go to state 257
    ']'  shift, and go to state 379


state 352

   55 ID_array_space: ID '(' . no_set_expr ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 380
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 353

   63 spaceIDa: spaceIDa ',' . ID_array_space

    '['  shift, and go to state 307
    ID   shift, and go to state 308

    ID_array_space  go to state 381


state 354

   54 ID_space: '[' list_of_id1 ']' '=' no_set_expr .

    $default  reduce using rule 54 (ID_space)


state 355

   53 ID_space: '[' list_of_id1 ']' '[' no_set_expr . ']'

    ']'  shift, and go to state 382


state 356

   94 instruction: for_loop '(' declaration_for ';' Expr ';' . Expr ')' instruction

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 383
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 357

   93 instruction: for_loop '(' Expr ';' Expr ';' . Expr ')' instruction

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 384
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 358

  104 catchs: CATCH '(' . '.' '.' '.' ')' instruction

    '.'  shift, and go to state 385


state 359

  176 primary: primary '[' sub_script_expr ',' sub_script_expr ']' .

    $default  reduce using rule 176 (primary)


state 360

   97 instruction: IF '(' Expr ')' instruction ELSE instruction .

    $default  reduce using rule 97 (instruction)


state 361

   40 parameters_list: parameters_list ',' id '=' . no_set_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 386
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 362

   48 type_of_dcl: TYPE '<' TYPE '>' '[' TYPE ',' . TYPE ']'

    TYPE  shift, and go to state 387


state 363

   47 type_of_dcl: TYPE '<' TYPE '>' '[' TYPE ']' .

    $default  reduce using rule 47 (type_of_dcl)


state 364

   45 type_of_dcl: TYPE '[' TYPE ',' TYPE ']' '[' . TYPE ']'

    TYPE  shift, and go to state 388


state 365

   43 type_of_dcl: TYPE '[' TYPE ']' '[' TYPE ']' .

    $default  reduce using rule 43 (type_of_dcl)


state 366

   15 list_of_id_args: list_of_id_args . ',' id
   16                | list_of_id_args . ',' '[' list_of_id_args ']'
   16                | list_of_id_args ',' '[' list_of_id_args . ']'
   17                | list_of_id_args . ',' id '=' no_comma_expr
   18                | list_of_id_args . ',' FESPACE id
   19                | list_of_id_args . ',' FESPACE '&' id
   20                | list_of_id_args . ',' FESPACE3 id
   21                | list_of_id_args . ',' FESPACE3 '&' id
   22                | list_of_id_args . ',' type_of_dcl id
   23                | list_of_id_args . ',' type_of_dcl '&' id

    ','  shift, and go to state 289
    ']'  shift, and go to state 389


state 367

   19 list_of_id_args: list_of_id_args ',' FESPACE '&' . id

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 390


state 368

   18 list_of_id_args: list_of_id_args ',' FESPACE id .

    $default  reduce using rule 18 (list_of_id_args)


state 369

   21 list_of_id_args: list_of_id_args ',' FESPACE3 '&' . id

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 391


state 370

   20 list_of_id_args: list_of_id_args ',' FESPACE3 id .

    $default  reduce using rule 20 (list_of_id_args)


state 371

   17 list_of_id_args: list_of_id_args ',' id '=' . no_comma_expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 392
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 372

   23 list_of_id_args: list_of_id_args ',' type_of_dcl '&' . id

    ID        shift, and go to state 169
    FESPACE   shift, and go to state 171
    FESPACE1  shift, and go to state 172
    FESPACE3  shift, and go to state 173

    id  go to state 393


state 373

   22 list_of_id_args: list_of_id_args ',' type_of_dcl id .

    $default  reduce using rule 22 (list_of_id_args)


state 374

   79 declaration: FUNCTION ID '(' list_of_id_args ')' $@3 '=' . no_comma_expr ';'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_comma_expr    go to state 394
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 375

   77 declaration: FUNCTION type_of_dcl ID '(' list_of_id_args ')' $@2 . '{' instructions '}'

    '{'  shift, and go to state 395


state 376

  127 no_ternary_expr: no_ternary_expr . '*' no_ternary_expr
  128                | no_ternary_expr . DOTSTAR no_ternary_expr
  129                | no_ternary_expr . DOTSLASH no_ternary_expr
  130                | no_ternary_expr . '/' no_ternary_expr
  131                | no_ternary_expr . '%' no_ternary_expr
  132                | no_ternary_expr . '+' no_ternary_expr
  133                | no_ternary_expr . '-' no_ternary_expr
  134                | no_ternary_expr . LTLT no_ternary_expr
  135                | no_ternary_expr . GTGT no_ternary_expr
  136                | no_ternary_expr . '&' no_ternary_expr
  137                | no_ternary_expr . AND no_ternary_expr
  138                | no_ternary_expr . '|' no_ternary_expr
  139                | no_ternary_expr . OR no_ternary_expr
  140                | no_ternary_expr . '<' no_ternary_expr
  141                | no_ternary_expr . LE no_ternary_expr
  142                | no_ternary_expr . '>' no_ternary_expr
  143                | no_ternary_expr . GE no_ternary_expr
  144                | no_ternary_expr . EQ no_ternary_expr
  145                | no_ternary_expr . NE no_ternary_expr
  149 sub_script_expr: no_ternary_expr ':' no_ternary_expr ':' no_ternary_expr .

    GTGT      shift, and go to state 105
    LTLT      shift, and go to state 106
    '|'       shift, and go to state 107
    OR        shift, and go to state 108
    '&'       shift, and go to state 109
    AND       shift, and go to state 110
    NE        shift, and go to state 111
    EQ        shift, and go to state 112
    '<'       shift, and go to state 113
    '>'       shift, and go to state 114
    GE        shift, and go to state 115
    LE        shift, and go to state 116
    '+'       shift, and go to state 117
    '-'       shift, and go to state 118
    '*'       shift, and go to state 119
    '/'       shift, and go to state 120
    '%'       shift, and go to state 121
    DOTSLASH  shift, and go to state 122
    DOTSTAR   shift, and go to state 123

    $default  reduce using rule 149 (sub_script_expr)


state 377

  160 parameters: parameters ',' id '=' no_set_expr .

    $default  reduce using rule 160 (parameters)


state 378

  105 bornes: '(' ID '=' Expr ',' . Expr ')'
  108 Expr: Expr ',' . Expr

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    Expr             go to state 396
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 379

   56 ID_array_space: '[' list_of_id1 ']' . '(' no_set_expr ')'

    '('  shift, and go to state 397


state 380

   55 ID_array_space: ID '(' no_set_expr . ')'

    ')'  shift, and go to state 398


state 381

   63 spaceIDa: spaceIDa ',' ID_array_space .

    $default  reduce using rule 63 (spaceIDa)


state 382

   53 ID_space: '[' list_of_id1 ']' '[' no_set_expr ']' .

    $default  reduce using rule 53 (ID_space)


state 383

   94 instruction: for_loop '(' declaration_for ';' Expr ';' Expr . ')' instruction
  108 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ')'  shift, and go to state 399


state 384

   93 instruction: for_loop '(' Expr ';' Expr ';' Expr . ')' instruction
  108 Expr: Expr . ',' Expr

    ','  shift, and go to state 95
    ')'  shift, and go to state 400


state 385

  104 catchs: CATCH '(' '.' . '.' '.' ')' instruction

    '.'  shift, and go to state 401


state 386

   40 parameters_list: parameters_list ',' id '=' no_set_expr .

    $default  reduce using rule 40 (parameters_list)


state 387

   48 type_of_dcl: TYPE '<' TYPE '>' '[' TYPE ',' TYPE . ']'

    ']'  shift, and go to state 402


state 388

   45 type_of_dcl: TYPE '[' TYPE ',' TYPE ']' '[' TYPE . ']'

    ']'  shift, and go to state 403


state 389

   16 list_of_id_args: list_of_id_args ',' '[' list_of_id_args ']' .

    $default  reduce using rule 16 (list_of_id_args)


state 390

   19 list_of_id_args: list_of_id_args ',' FESPACE '&' id .

    $default  reduce using rule 19 (list_of_id_args)


state 391

   21 list_of_id_args: list_of_id_args ',' FESPACE3 '&' id .

    $default  reduce using rule 21 (list_of_id_args)


state 392

   17 list_of_id_args: list_of_id_args ',' id '=' no_comma_expr .

    $default  reduce using rule 17 (list_of_id_args)


state 393

   23 list_of_id_args: list_of_id_args ',' type_of_dcl '&' id .

    $default  reduce using rule 23 (list_of_id_args)


state 394

   79 declaration: FUNCTION ID '(' list_of_id_args ')' $@3 '=' no_comma_expr . ';'

    ';'  shift, and go to state 404


state 395

   77 declaration: FUNCTION type_of_dcl ID '(' list_of_id_args ')' $@2 '{' . instructions '}'

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    instructions     go to state 405
    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 43
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 396

  105 bornes: '(' ID '=' Expr ',' Expr . ')'
  108 Expr: Expr . ',' Expr
  108     | Expr ',' Expr .

    ')'  shift, and go to state 406

    $default  reduce using rule 108 (Expr)


state 397

   56 ID_array_space: '[' list_of_id1 ']' '(' . no_set_expr ')'

    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    STRING      shift, and go to state 14
    TYPE        shift, and go to state 53
    FESPACE     shift, and go to state 54
    FESPACE1    shift, and go to state 55
    FESPACE3    shift, and go to state 56

    unop             go to state 45
    no_set_expr      go to state 407
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 398

   55 ID_array_space: ID '(' no_set_expr ')' .

    $default  reduce using rule 55 (ID_array_space)


state 399

   94 instruction: for_loop '(' declaration_for ';' Expr ';' Expr ')' . instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 408
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 400

   93 instruction: for_loop '(' Expr ';' Expr ';' Expr ')' . instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 409
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 401

  104 catchs: CATCH '(' '.' '.' . '.' ')' instruction

    '.'  shift, and go to state 410


state 402

   48 type_of_dcl: TYPE '<' TYPE '>' '[' TYPE ',' TYPE ']' .

    $default  reduce using rule 48 (type_of_dcl)


state 403

   45 type_of_dcl: TYPE '[' TYPE ',' TYPE ']' '[' TYPE ']' .

    $default  reduce using rule 45 (type_of_dcl)


state 404

   79 declaration: FUNCTION ID '(' list_of_id_args ')' $@3 '=' no_comma_expr ';' .

    $default  reduce using rule 79 (declaration)


state 405

    4 instructions: instructions . instruction
   77 declaration: FUNCTION type_of_dcl ID '(' list_of_id_args ')' $@2 '{' instructions . '}'

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30
    '}'         shift, and go to state 411

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 83
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 406

  105 bornes: '(' ID '=' Expr ',' Expr ')' .

    $default  reduce using rule 105 (bornes)


state 407

   56 ID_array_space: '[' list_of_id1 ']' '(' no_set_expr . ')'

    ')'  shift, and go to state 412


state 408

   94 instruction: for_loop '(' declaration_for ';' Expr ';' Expr ')' instruction .

    $default  reduce using rule 94 (instruction)


state 409

   93 instruction: for_loop '(' Expr ';' Expr ';' Expr ')' instruction .

    $default  reduce using rule 93 (instruction)


state 410

  104 catchs: CATCH '(' '.' '.' '.' . ')' instruction

    ')'  shift, and go to state 413


state 411

   77 declaration: FUNCTION type_of_dcl ID '(' list_of_id_args ')' $@2 '{' instructions '}' .

    $default  reduce using rule 77 (declaration)


state 412

   56 ID_array_space: '[' list_of_id1 ']' '(' no_set_expr ')' .

    $default  reduce using rule 56 (ID_array_space)


state 413

  104 catchs: CATCH '(' '.' '.' '.' ')' . instruction

    IF          shift, and go to state 1
    '+'         shift, and go to state 2
    '-'         shift, and go to state 3
    '!'         shift, and go to state 4
    MOINSMOINS  shift, and go to state 5
    PLUSPLUS    shift, and go to state 6
    '('         shift, and go to state 7
    '['         shift, and go to state 8
    LNUM        shift, and go to state 9
    DNUM        shift, and go to state 10
    CNUM        shift, and go to state 11
    ID          shift, and go to state 12
    FESPACEID   shift, and go to state 13
    STRING      shift, and go to state 14
    INCLUDE     shift, and go to state 15
    LOAD        shift, and go to state 16
    FOR         shift, and go to state 17
    WHILE       shift, and go to state 18
    BREAK       shift, and go to state 19
    CONTINUE    shift, and go to state 20
    RETURN      shift, and go to state 21
    TRY         shift, and go to state 22
    TYPE        shift, and go to state 23
    FUNCTION    shift, and go to state 24
    FESPACE     shift, and go to state 25
    FESPACE1    shift, and go to state 26
    FESPACE3    shift, and go to state 27
    BORDER      shift, and go to state 28
    ';'         shift, and go to state 29
    '{'         shift, and go to state 30

    type_of_dcl      go to state 34
    fespace123       go to state 35
    fespace          go to state 36
    spaceIDs         go to state 37
    declaration      go to state 38
    begin            go to state 39
    for_loop         go to state 40
    while_loop       go to state 41
    try              go to state 42
    instruction      go to state 414
    Expr             go to state 44
    unop             go to state 45
    no_comma_expr    go to state 46
    no_set_expr      go to state 47
    no_ternary_expr  go to state 48
    unary_expr       go to state 49
    pow_expr         go to state 50
    primary          go to state 51


state 414

  104 catchs: CATCH '(' '.' '.' '.' ')' instruction .

    $default  reduce using rule 104 (catchs)
